{
	"id": "fadfef540849270d278b1cad30f66cb3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Beef.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {IERC20Errors} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\";\nimport {Ownable} from \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\n\ncontract Beef is IERC20, IERC20Errors, Ownable {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    constructor(string memory name_, string memory symbol_, address owner) Ownable(owner) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    function burn(uint256 amount) external {\n        _burn(msg.sender, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Beef.sol": {
				"Beef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Beef.sol\":592:4996  contract Beef is IERC20, IERC20Errors, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Beef.sol\":885:1028  constructor(string memory name_, string memory symbol_, address owner) Ownable(owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Beef.sol\":964:969  owner */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Beef.sol\":989:994  name_ */\n  dup3\n    /* \"contracts/Beef.sol\":981:986  _name */\n  0x04\n    /* \"contracts/Beef.sol\":981:994  _name = name_ */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/Beef.sol\":1014:1021  symbol_ */\n  dup2\n    /* \"contracts/Beef.sol\":1004:1011  _symbol */\n  0x05\n    /* \"contracts/Beef.sol\":1004:1021  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/Beef.sol\":885:1028  constructor(string memory name_, string memory symbol_, address owner) Ownable(owner) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Beef.sol\":592:4996  contract Beef is IERC20, IERC20Errors, Ownable {... */\n  jump(tag_16)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_18:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_20:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_21:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_22:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_23:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_24:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_25:\n    /* \"#utility.yul\":957:984   */\n  tag_64\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_66\n  tag_24\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1030:1118   */\ntag_65:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_26:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_68\n  tag_18\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_69\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_27:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_72\n  tag_24\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1434:1490   */\ntag_71:\n    /* \"#utility.yul\":1508:1537   */\n  tag_73\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_28:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_29:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_76\n    /* \"#utility.yul\":1885:1934   */\n  tag_77\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_27\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1869:1935   */\n  tag_26\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_79\n  tag_22\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2010:2122   */\ntag_78:\n    /* \"#utility.yul\":2131:2183   */\n  tag_80\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_28\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_30:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_83\n  tag_21\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2292:2414   */\ntag_82:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_84\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_29\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_31:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_32:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_87\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_33:\n    /* \"#utility.yul\":2877:2901   */\n  tag_89\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_32\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_90:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_34:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_92\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_33\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  dup1\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_95\n  tag_19\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3222:3341   */\ntag_94:\n    /* \"#utility.yul\":3401:3402   */\n  0x00\n    /* \"#utility.yul\":3390:3399   */\n  dup5\n    /* \"#utility.yul\":3386:3403   */\n  add\n    /* \"#utility.yul\":3380:3404   */\n  mload\n    /* \"#utility.yul\":3431:3449   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3420:3450   */\n  gt\n    /* \"#utility.yul\":3417:3534   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3453:3532   */\n  tag_97\n  tag_20\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3417:3534   */\ntag_96:\n    /* \"#utility.yul\":3558:3632   */\n  tag_98\n    /* \"#utility.yul\":3624:3631   */\n  dup7\n    /* \"#utility.yul\":3615:3621   */\n  dup3\n    /* \"#utility.yul\":3604:3613   */\n  dup8\n    /* \"#utility.yul\":3600:3622   */\n  add\n    /* \"#utility.yul\":3558:3632   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3548:3632   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3642   */\n  pop\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"#utility.yul\":3691:3700   */\n  dup5\n    /* \"#utility.yul\":3687:3705   */\n  add\n    /* \"#utility.yul\":3681:3706   */\n  mload\n    /* \"#utility.yul\":3733:3751   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3725:3731   */\n  dup2\n    /* \"#utility.yul\":3722:3752   */\n  gt\n    /* \"#utility.yul\":3719:3836   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3755:3834   */\n  tag_100\n  tag_20\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3719:3836   */\ntag_99:\n    /* \"#utility.yul\":3860:3934   */\n  tag_101\n    /* \"#utility.yul\":3926:3933   */\n  dup7\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3906:3915   */\n  dup8\n    /* \"#utility.yul\":3902:3924   */\n  add\n    /* \"#utility.yul\":3860:3934   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3850:3934   */\n  swap3\n  pop\n    /* \"#utility.yul\":3652:3944   */\n  pop\n    /* \"#utility.yul\":3983:3985   */\n  0x40\n    /* \"#utility.yul\":4009:4073   */\n  tag_102\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":4009:4073   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3999:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3954:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4214   */\ntag_35:\n    /* \"#utility.yul\":4183:4207   */\n  tag_104\n    /* \"#utility.yul\":4201:4206   */\n  dup2\n    /* \"#utility.yul\":4183:4207   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4178:4181   */\n  dup3\n    /* \"#utility.yul\":4171:4208   */\n  mstore\n    /* \"#utility.yul\":4096:4214   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4220:4442   */\ntag_9:\n    /* \"#utility.yul\":4313:4317   */\n  0x00\n    /* \"#utility.yul\":4351:4353   */\n  0x20\n    /* \"#utility.yul\":4340:4349   */\n  dup3\n    /* \"#utility.yul\":4336:4354   */\n  add\n    /* \"#utility.yul\":4328:4354   */\n  swap1\n  pop\n    /* \"#utility.yul\":4364:4435   */\n  tag_106\n    /* \"#utility.yul\":4432:4433   */\n  0x00\n    /* \"#utility.yul\":4421:4430   */\n  dup4\n    /* \"#utility.yul\":4417:4434   */\n  add\n    /* \"#utility.yul\":4408:4414   */\n  dup5\n    /* \"#utility.yul\":4364:4435   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4220:4442   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4448:4547   */\ntag_36:\n    /* \"#utility.yul\":4500:4506   */\n  0x00\n    /* \"#utility.yul\":4534:4539   */\n  dup2\n    /* \"#utility.yul\":4528:4540   */\n  mload\n    /* \"#utility.yul\":4518:4540   */\n  swap1\n  pop\n    /* \"#utility.yul\":4448:4547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4553:4733   */\ntag_37:\n    /* \"#utility.yul\":4601:4678   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4598:4599   */\n  0x00\n    /* \"#utility.yul\":4591:4679   */\n  mstore\n    /* \"#utility.yul\":4698:4702   */\n  0x22\n    /* \"#utility.yul\":4695:4696   */\n  0x04\n    /* \"#utility.yul\":4688:4703   */\n  mstore\n    /* \"#utility.yul\":4722:4726   */\n  0x24\n    /* \"#utility.yul\":4719:4720   */\n  0x00\n    /* \"#utility.yul\":4712:4727   */\n  revert\n    /* \"#utility.yul\":4739:5059   */\ntag_38:\n    /* \"#utility.yul\":4783:4789   */\n  0x00\n    /* \"#utility.yul\":4820:4821   */\n  0x02\n    /* \"#utility.yul\":4814:4818   */\n  dup3\n    /* \"#utility.yul\":4810:4822   */\n  div\n    /* \"#utility.yul\":4800:4822   */\n  swap1\n  pop\n    /* \"#utility.yul\":4867:4868   */\n  0x01\n    /* \"#utility.yul\":4861:4865   */\n  dup3\n    /* \"#utility.yul\":4857:4869   */\n  and\n    /* \"#utility.yul\":4888:4906   */\n  dup1\n    /* \"#utility.yul\":4878:4959   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4944:4948   */\n  0x7f\n    /* \"#utility.yul\":4936:4942   */\n  dup3\n    /* \"#utility.yul\":4932:4949   */\n  and\n    /* \"#utility.yul\":4922:4949   */\n  swap2\n  pop\n    /* \"#utility.yul\":4878:4959   */\ntag_110:\n    /* \"#utility.yul\":5006:5008   */\n  0x20\n    /* \"#utility.yul\":4998:5004   */\n  dup3\n    /* \"#utility.yul\":4995:5009   */\n  lt\n    /* \"#utility.yul\":4975:4993   */\n  dup2\n    /* \"#utility.yul\":4972:5010   */\n  sub\n    /* \"#utility.yul\":4969:5053   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5025:5043   */\n  tag_112\n  tag_37\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4969:5053   */\ntag_111:\n    /* \"#utility.yul\":4790:5059   */\n  pop\n    /* \"#utility.yul\":4739:5059   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5065:5206   */\ntag_39:\n    /* \"#utility.yul\":5114:5118   */\n  0x00\n    /* \"#utility.yul\":5137:5140   */\n  dup2\n    /* \"#utility.yul\":5129:5140   */\n  swap1\n  pop\n    /* \"#utility.yul\":5160:5163   */\n  dup2\n    /* \"#utility.yul\":5157:5158   */\n  0x00\n    /* \"#utility.yul\":5150:5164   */\n  mstore\n    /* \"#utility.yul\":5194:5198   */\n  0x20\n    /* \"#utility.yul\":5191:5192   */\n  0x00\n    /* \"#utility.yul\":5181:5199   */\n  keccak256\n    /* \"#utility.yul\":5173:5199   */\n  swap1\n  pop\n    /* \"#utility.yul\":5065:5206   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5212:5305   */\ntag_40:\n    /* \"#utility.yul\":5249:5255   */\n  0x00\n    /* \"#utility.yul\":5296:5298   */\n  0x20\n    /* \"#utility.yul\":5291:5293   */\n  0x1f\n    /* \"#utility.yul\":5284:5289   */\n  dup4\n    /* \"#utility.yul\":5280:5294   */\n  add\n    /* \"#utility.yul\":5276:5299   */\n  div\n    /* \"#utility.yul\":5266:5299   */\n  swap1\n  pop\n    /* \"#utility.yul\":5212:5305   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5311:5418   */\ntag_41:\n    /* \"#utility.yul\":5355:5363   */\n  0x00\n    /* \"#utility.yul\":5405:5410   */\n  dup3\n    /* \"#utility.yul\":5399:5403   */\n  dup3\n    /* \"#utility.yul\":5395:5411   */\n  shl\n    /* \"#utility.yul\":5374:5411   */\n  swap1\n  pop\n    /* \"#utility.yul\":5311:5418   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5424:5817   */\ntag_42:\n    /* \"#utility.yul\":5493:5499   */\n  0x00\n    /* \"#utility.yul\":5543:5544   */\n  0x08\n    /* \"#utility.yul\":5531:5541   */\n  dup4\n    /* \"#utility.yul\":5527:5545   */\n  mul\n    /* \"#utility.yul\":5566:5663   */\n  tag_117\n    /* \"#utility.yul\":5596:5662   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5585:5594   */\n  dup3\n    /* \"#utility.yul\":5566:5663   */\n  tag_41\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5684:5723   */\n  tag_118\n    /* \"#utility.yul\":5714:5722   */\n  dup7\n    /* \"#utility.yul\":5703:5712   */\n  dup4\n    /* \"#utility.yul\":5684:5723   */\n  tag_41\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5672:5723   */\n  swap6\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  dup1\n    /* \"#utility.yul\":5752:5761   */\n  not\n    /* \"#utility.yul\":5745:5750   */\n  dup5\n    /* \"#utility.yul\":5741:5762   */\n  and\n    /* \"#utility.yul\":5732:5762   */\n  swap4\n  pop\n    /* \"#utility.yul\":5805:5809   */\n  dup1\n    /* \"#utility.yul\":5795:5803   */\n  dup7\n    /* \"#utility.yul\":5791:5810   */\n  and\n    /* \"#utility.yul\":5784:5789   */\n  dup5\n    /* \"#utility.yul\":5781:5811   */\n  or\n    /* \"#utility.yul\":5771:5811   */\n  swap3\n  pop\n    /* \"#utility.yul\":5500:5817   */\n  pop\n  pop\n    /* \"#utility.yul\":5424:5817   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5823:5900   */\ntag_43:\n    /* \"#utility.yul\":5860:5867   */\n  0x00\n    /* \"#utility.yul\":5889:5894   */\n  dup2\n    /* \"#utility.yul\":5878:5894   */\n  swap1\n  pop\n    /* \"#utility.yul\":5823:5900   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5906:5966   */\ntag_44:\n    /* \"#utility.yul\":5934:5937   */\n  0x00\n    /* \"#utility.yul\":5955:5960   */\n  dup2\n    /* \"#utility.yul\":5948:5960   */\n  swap1\n  pop\n    /* \"#utility.yul\":5906:5966   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5972:6114   */\ntag_45:\n    /* \"#utility.yul\":6022:6031   */\n  0x00\n    /* \"#utility.yul\":6055:6108   */\n  tag_122\n    /* \"#utility.yul\":6073:6107   */\n  tag_123\n    /* \"#utility.yul\":6082:6106   */\n  tag_124\n    /* \"#utility.yul\":6100:6105   */\n  dup5\n    /* \"#utility.yul\":6082:6106   */\n  tag_43\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6073:6107   */\n  tag_44\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6055:6108   */\n  tag_43\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6042:6108   */\n  swap1\n  pop\n    /* \"#utility.yul\":5972:6114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6120:6195   */\ntag_46:\n    /* \"#utility.yul\":6163:6166   */\n  0x00\n    /* \"#utility.yul\":6184:6189   */\n  dup2\n    /* \"#utility.yul\":6177:6189   */\n  swap1\n  pop\n    /* \"#utility.yul\":6120:6195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6201:6470   */\ntag_47:\n    /* \"#utility.yul\":6311:6350   */\n  tag_127\n    /* \"#utility.yul\":6342:6349   */\n  dup4\n    /* \"#utility.yul\":6311:6350   */\n  tag_45\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6372:6463   */\n  tag_128\n    /* \"#utility.yul\":6421:6462   */\n  tag_129\n    /* \"#utility.yul\":6445:6461   */\n  dup3\n    /* \"#utility.yul\":6421:6462   */\n  tag_46\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6413:6419   */\n  dup5\n    /* \"#utility.yul\":6406:6410   */\n  dup5\n    /* \"#utility.yul\":6400:6411   */\n  sload\n    /* \"#utility.yul\":6372:6463   */\n  tag_42\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6366:6370   */\n  dup3\n    /* \"#utility.yul\":6359:6464   */\n  sstore\n    /* \"#utility.yul\":6277:6470   */\n  pop\n    /* \"#utility.yul\":6201:6470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6476:6549   */\ntag_48:\n    /* \"#utility.yul\":6521:6524   */\n  0x00\n    /* \"#utility.yul\":6476:6549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6555:6744   */\ntag_49:\n    /* \"#utility.yul\":6632:6664   */\n  tag_132\n  tag_48\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6673:6738   */\n  tag_133\n    /* \"#utility.yul\":6731:6737   */\n  dup2\n    /* \"#utility.yul\":6723:6729   */\n  dup5\n    /* \"#utility.yul\":6717:6721   */\n  dup5\n    /* \"#utility.yul\":6673:6738   */\n  tag_47\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6608:6744   */\n  pop\n    /* \"#utility.yul\":6555:6744   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6750:6936   */\ntag_50:\n    /* \"#utility.yul\":6810:6930   */\ntag_135:\n    /* \"#utility.yul\":6827:6830   */\n  dup2\n    /* \"#utility.yul\":6820:6825   */\n  dup2\n    /* \"#utility.yul\":6817:6831   */\n  lt\n    /* \"#utility.yul\":6810:6930   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6881:6920   */\n  tag_138\n    /* \"#utility.yul\":6918:6919   */\n  0x00\n    /* \"#utility.yul\":6911:6916   */\n  dup3\n    /* \"#utility.yul\":6881:6920   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6854:6855   */\n  0x01\n    /* \"#utility.yul\":6847:6852   */\n  dup2\n    /* \"#utility.yul\":6843:6856   */\n  add\n    /* \"#utility.yul\":6834:6856   */\n  swap1\n  pop\n    /* \"#utility.yul\":6810:6930   */\n  jump(tag_135)\ntag_137:\n    /* \"#utility.yul\":6750:6936   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6942:7485   */\ntag_51:\n    /* \"#utility.yul\":7043:7045   */\n  0x1f\n    /* \"#utility.yul\":7038:7041   */\n  dup3\n    /* \"#utility.yul\":7035:7046   */\n  gt\n    /* \"#utility.yul\":7032:7478   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7077:7115   */\n  tag_141\n    /* \"#utility.yul\":7109:7114   */\n  dup2\n    /* \"#utility.yul\":7077:7115   */\n  tag_39\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7161:7190   */\n  tag_142\n    /* \"#utility.yul\":7179:7189   */\n  dup5\n    /* \"#utility.yul\":7161:7190   */\n  tag_40\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7151:7159   */\n  dup2\n    /* \"#utility.yul\":7147:7191   */\n  add\n    /* \"#utility.yul\":7344:7346   */\n  0x20\n    /* \"#utility.yul\":7332:7342   */\n  dup6\n    /* \"#utility.yul\":7329:7347   */\n  lt\n    /* \"#utility.yul\":7326:7375   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7365:7373   */\n  dup2\n    /* \"#utility.yul\":7350:7373   */\n  swap1\n  pop\n    /* \"#utility.yul\":7326:7375   */\ntag_143:\n    /* \"#utility.yul\":7388:7468   */\n  tag_144\n    /* \"#utility.yul\":7444:7466   */\n  tag_145\n    /* \"#utility.yul\":7462:7465   */\n  dup6\n    /* \"#utility.yul\":7444:7466   */\n  tag_40\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7434:7442   */\n  dup4\n    /* \"#utility.yul\":7430:7467   */\n  add\n    /* \"#utility.yul\":7417:7428   */\n  dup3\n    /* \"#utility.yul\":7388:7468   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7047:7478   */\n  pop\n  pop\n    /* \"#utility.yul\":7032:7478   */\ntag_140:\n    /* \"#utility.yul\":6942:7485   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7491:7608   */\ntag_52:\n    /* \"#utility.yul\":7545:7553   */\n  0x00\n    /* \"#utility.yul\":7595:7600   */\n  dup3\n    /* \"#utility.yul\":7589:7593   */\n  dup3\n    /* \"#utility.yul\":7585:7601   */\n  shr\n    /* \"#utility.yul\":7564:7601   */\n  swap1\n  pop\n    /* \"#utility.yul\":7491:7608   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7614:7783   */\ntag_53:\n    /* \"#utility.yul\":7658:7664   */\n  0x00\n    /* \"#utility.yul\":7691:7742   */\n  tag_148\n    /* \"#utility.yul\":7739:7740   */\n  0x00\n    /* \"#utility.yul\":7735:7741   */\n  not\n    /* \"#utility.yul\":7727:7732   */\n  dup5\n    /* \"#utility.yul\":7724:7725   */\n  0x08\n    /* \"#utility.yul\":7720:7733   */\n  mul\n    /* \"#utility.yul\":7691:7742   */\n  tag_52\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7687:7743   */\n  not\n    /* \"#utility.yul\":7772:7776   */\n  dup1\n    /* \"#utility.yul\":7766:7770   */\n  dup4\n    /* \"#utility.yul\":7762:7777   */\n  and\n    /* \"#utility.yul\":7752:7777   */\n  swap2\n  pop\n    /* \"#utility.yul\":7665:7783   */\n  pop\n    /* \"#utility.yul\":7614:7783   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7788:8083   */\ntag_54:\n    /* \"#utility.yul\":7864:7868   */\n  0x00\n    /* \"#utility.yul\":8010:8039   */\n  tag_150\n    /* \"#utility.yul\":8035:8038   */\n  dup4\n    /* \"#utility.yul\":8029:8033   */\n  dup4\n    /* \"#utility.yul\":8010:8039   */\n  tag_53\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8002:8039   */\n  swap2\n  pop\n    /* \"#utility.yul\":8072:8075   */\n  dup3\n    /* \"#utility.yul\":8069:8070   */\n  0x02\n    /* \"#utility.yul\":8065:8076   */\n  mul\n    /* \"#utility.yul\":8059:8063   */\n  dup3\n    /* \"#utility.yul\":8056:8077   */\n  or\n    /* \"#utility.yul\":8048:8077   */\n  swap1\n  pop\n    /* \"#utility.yul\":7788:8083   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8088:9483   */\ntag_14:\n    /* \"#utility.yul\":8205:8242   */\n  tag_152\n    /* \"#utility.yul\":8238:8241   */\n  dup3\n    /* \"#utility.yul\":8205:8242   */\n  tag_36\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":8307:8325   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8299:8305   */\n  dup2\n    /* \"#utility.yul\":8296:8326   */\n  gt\n    /* \"#utility.yul\":8293:8349   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8329:8347   */\n  tag_154\n  tag_24\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8293:8349   */\ntag_153:\n    /* \"#utility.yul\":8373:8411   */\n  tag_155\n    /* \"#utility.yul\":8405:8409   */\n  dup3\n    /* \"#utility.yul\":8399:8410   */\n  sload\n    /* \"#utility.yul\":8373:8411   */\n  tag_38\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8458:8525   */\n  tag_156\n    /* \"#utility.yul\":8518:8524   */\n  dup3\n    /* \"#utility.yul\":8510:8516   */\n  dup3\n    /* \"#utility.yul\":8504:8508   */\n  dup6\n    /* \"#utility.yul\":8458:8525   */\n  tag_51\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8552:8553   */\n  0x00\n    /* \"#utility.yul\":8576:8580   */\n  0x20\n    /* \"#utility.yul\":8563:8580   */\n  swap1\n  pop\n    /* \"#utility.yul\":8608:8610   */\n  0x1f\n    /* \"#utility.yul\":8600:8606   */\n  dup4\n    /* \"#utility.yul\":8597:8611   */\n  gt\n    /* \"#utility.yul\":8625:8626   */\n  0x01\n    /* \"#utility.yul\":8620:9238   */\n  dup2\n  eq\n  tag_158\n  jumpi\n    /* \"#utility.yul\":9282:9283   */\n  0x00\n    /* \"#utility.yul\":9299:9305   */\n  dup5\n    /* \"#utility.yul\":9296:9373   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":9348:9357   */\n  dup3\n    /* \"#utility.yul\":9343:9346   */\n  dup8\n    /* \"#utility.yul\":9339:9358   */\n  add\n    /* \"#utility.yul\":9333:9359   */\n  mload\n    /* \"#utility.yul\":9324:9359   */\n  swap1\n  pop\n    /* \"#utility.yul\":9296:9373   */\ntag_159:\n    /* \"#utility.yul\":9399:9466   */\n  tag_160\n    /* \"#utility.yul\":9459:9465   */\n  dup6\n    /* \"#utility.yul\":9452:9457   */\n  dup3\n    /* \"#utility.yul\":9399:9466   */\n  tag_54\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":9393:9397   */\n  dup7\n    /* \"#utility.yul\":9386:9467   */\n  sstore\n    /* \"#utility.yul\":9255:9477   */\n  pop\n    /* \"#utility.yul\":8590:9477   */\n  jump(tag_157)\n    /* \"#utility.yul\":8620:9238   */\ntag_158:\n    /* \"#utility.yul\":8672:8676   */\n  0x1f\n    /* \"#utility.yul\":8668:8677   */\n  not\n    /* \"#utility.yul\":8660:8666   */\n  dup5\n    /* \"#utility.yul\":8656:8678   */\n  and\n    /* \"#utility.yul\":8706:8743   */\n  tag_161\n    /* \"#utility.yul\":8738:8742   */\n  dup7\n    /* \"#utility.yul\":8706:8743   */\n  tag_39\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8765:8766   */\n  0x00\n    /* \"#utility.yul\":8779:8987   */\ntag_162:\n    /* \"#utility.yul\":8793:8800   */\n  dup3\n    /* \"#utility.yul\":8790:8791   */\n  dup2\n    /* \"#utility.yul\":8787:8801   */\n  lt\n    /* \"#utility.yul\":8779:8987   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":8872:8881   */\n  dup5\n    /* \"#utility.yul\":8867:8870   */\n  dup10\n    /* \"#utility.yul\":8863:8882   */\n  add\n    /* \"#utility.yul\":8857:8883   */\n  mload\n    /* \"#utility.yul\":8849:8855   */\n  dup3\n    /* \"#utility.yul\":8842:8884   */\n  sstore\n    /* \"#utility.yul\":8923:8924   */\n  0x01\n    /* \"#utility.yul\":8915:8921   */\n  dup3\n    /* \"#utility.yul\":8911:8925   */\n  add\n    /* \"#utility.yul\":8901:8925   */\n  swap2\n  pop\n    /* \"#utility.yul\":8970:8972   */\n  0x20\n    /* \"#utility.yul\":8959:8968   */\n  dup6\n    /* \"#utility.yul\":8955:8973   */\n  add\n    /* \"#utility.yul\":8942:8973   */\n  swap5\n  pop\n    /* \"#utility.yul\":8816:8820   */\n  0x20\n    /* \"#utility.yul\":8813:8814   */\n  dup2\n    /* \"#utility.yul\":8809:8821   */\n  add\n    /* \"#utility.yul\":8804:8821   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8987   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":9015:9021   */\n  dup7\n    /* \"#utility.yul\":9006:9013   */\n  dup4\n    /* \"#utility.yul\":9003:9022   */\n  lt\n    /* \"#utility.yul\":9000:9179   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":9073:9082   */\n  dup5\n    /* \"#utility.yul\":9068:9071   */\n  dup10\n    /* \"#utility.yul\":9064:9083   */\n  add\n    /* \"#utility.yul\":9058:9084   */\n  mload\n    /* \"#utility.yul\":9116:9164   */\n  tag_166\n    /* \"#utility.yul\":9158:9162   */\n  0x1f\n    /* \"#utility.yul\":9150:9156   */\n  dup10\n    /* \"#utility.yul\":9146:9163   */\n  and\n    /* \"#utility.yul\":9135:9144   */\n  dup3\n    /* \"#utility.yul\":9116:9164   */\n  tag_53\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":9108:9114   */\n  dup4\n    /* \"#utility.yul\":9101:9165   */\n  sstore\n    /* \"#utility.yul\":9023:9179   */\n  pop\n    /* \"#utility.yul\":9000:9179   */\ntag_165:\n    /* \"#utility.yul\":9225:9226   */\n  0x01\n    /* \"#utility.yul\":9221:9222   */\n  0x02\n    /* \"#utility.yul\":9213:9219   */\n  dup9\n    /* \"#utility.yul\":9209:9223   */\n  mul\n    /* \"#utility.yul\":9205:9227   */\n  add\n    /* \"#utility.yul\":9199:9203   */\n  dup9\n    /* \"#utility.yul\":9192:9228   */\n  sstore\n    /* \"#utility.yul\":8627:9238   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8590:9477   */\ntag_157:\n  pop\n    /* \"#utility.yul\":8180:9483   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8088:9483   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Beef.sol\":592:4996  contract Beef is IERC20, IERC20Errors, Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Beef.sol\":592:4996  contract Beef is IERC20, IERC20Errors, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Beef.sol\":1034:1123  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":1871:2057  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":1316:1413  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":2063:2307  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":1228:1310  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":4812:4907  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Beef.sol\":4913:4994  function burn(uint256 amount) external {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Beef.sol\":1419:1535  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":1129:1222  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":1541:1719  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Beef.sol\":1725:1865  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/Beef.sol\":1034:1123  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"contracts/Beef.sol\":1079:1092  string memory */\n      0x60\n        /* \"contracts/Beef.sol\":1111:1116  _name */\n      0x04\n        /* \"contracts/Beef.sol\":1104:1116  return _name */\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_78\n      jump\t// in\n    tag_79:\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1034:1123  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Beef.sol\":1871:2057  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"contracts/Beef.sol\":1944:1948  bool */\n      0x00\n        /* \"contracts/Beef.sol\":1960:1973  address owner */\n      dup1\n        /* \"contracts/Beef.sol\":1976:1988  _msgSender() */\n      tag_84\n        /* \"contracts/Beef.sol\":1976:1986  _msgSender */\n      tag_85\n        /* \"contracts/Beef.sol\":1976:1988  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Beef.sol\":1960:1988  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1998:2029  _approve(owner, spender, value) */\n      tag_86\n        /* \"contracts/Beef.sol\":2007:2012  owner */\n      dup2\n        /* \"contracts/Beef.sol\":2014:2021  spender */\n      dup6\n        /* \"contracts/Beef.sol\":2023:2028  value */\n      dup6\n        /* \"contracts/Beef.sol\":1998:2006  _approve */\n      tag_87\n        /* \"contracts/Beef.sol\":1998:2029  _approve(owner, spender, value) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Beef.sol\":2046:2050  true */\n      0x01\n        /* \"contracts/Beef.sol\":2039:2050  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Beef.sol\":1871:2057  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":1316:1413  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"contracts/Beef.sol\":1368:1375  uint256 */\n      0x00\n        /* \"contracts/Beef.sol\":1394:1406  _totalSupply */\n      sload(0x03)\n        /* \"contracts/Beef.sol\":1387:1406  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1316:1413  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Beef.sol\":2063:2307  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"contracts/Beef.sol\":2150:2154  bool */\n      0x00\n        /* \"contracts/Beef.sol\":2166:2181  address spender */\n      dup1\n        /* \"contracts/Beef.sol\":2184:2196  _msgSender() */\n      tag_90\n        /* \"contracts/Beef.sol\":2184:2194  _msgSender */\n      tag_85\n        /* \"contracts/Beef.sol\":2184:2196  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/Beef.sol\":2166:2196  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":2206:2243  _spendAllowance(from, spender, value) */\n      tag_91\n        /* \"contracts/Beef.sol\":2222:2226  from */\n      dup6\n        /* \"contracts/Beef.sol\":2228:2235  spender */\n      dup3\n        /* \"contracts/Beef.sol\":2237:2242  value */\n      dup6\n        /* \"contracts/Beef.sol\":2206:2221  _spendAllowance */\n      tag_92\n        /* \"contracts/Beef.sol\":2206:2243  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/Beef.sol\":2253:2279  _transfer(from, to, value) */\n      tag_93\n        /* \"contracts/Beef.sol\":2263:2267  from */\n      dup6\n        /* \"contracts/Beef.sol\":2269:2271  to */\n      dup6\n        /* \"contracts/Beef.sol\":2273:2278  value */\n      dup6\n        /* \"contracts/Beef.sol\":2253:2262  _transfer */\n      tag_94\n        /* \"contracts/Beef.sol\":2253:2279  _transfer(from, to, value) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Beef.sol\":2296:2300  true */\n      0x01\n        /* \"contracts/Beef.sol\":2289:2300  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Beef.sol\":2063:2307  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":1228:1310  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"contracts/Beef.sol\":1277:1282  uint8 */\n      0x00\n        /* \"contracts/Beef.sol\":1301:1303  18 */\n      0x12\n        /* \"contracts/Beef.sol\":1294:1303  return 18 */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1228:1310  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Beef.sol\":4812:4907  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Beef.sol\":4883:4900  _mint(to, amount) */\n      tag_100\n        /* \"contracts/Beef.sol\":4889:4891  to */\n      dup3\n        /* \"contracts/Beef.sol\":4893:4899  amount */\n      dup3\n        /* \"contracts/Beef.sol\":4883:4888  _mint */\n      tag_101\n        /* \"contracts/Beef.sol\":4883:4900  _mint(to, amount) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Beef.sol\":4812:4907  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":4913:4994  function burn(uint256 amount) external {... */\n    tag_49:\n        /* \"contracts/Beef.sol\":4962:4987  _burn(msg.sender, amount) */\n      tag_103\n        /* \"contracts/Beef.sol\":4968:4978  msg.sender */\n      caller\n        /* \"contracts/Beef.sol\":4980:4986  amount */\n      dup3\n        /* \"contracts/Beef.sol\":4962:4967  _burn */\n      tag_104\n        /* \"contracts/Beef.sol\":4962:4987  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/Beef.sol\":4913:4994  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":1419:1535  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"contracts/Beef.sol\":1484:1491  uint256 */\n      0x00\n        /* \"contracts/Beef.sol\":1510:1519  _balances */\n      0x01\n        /* \"contracts/Beef.sol\":1510:1528  _balances[account] */\n      0x00\n        /* \"contracts/Beef.sol\":1520:1527  account */\n      dup4\n        /* \"contracts/Beef.sol\":1510:1528  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Beef.sol\":1503:1528  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1419:1535  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Beef.sol\":1129:1222  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"contracts/Beef.sol\":1176:1189  string memory */\n      0x60\n        /* \"contracts/Beef.sol\":1208:1215  _symbol */\n      0x05\n        /* \"contracts/Beef.sol\":1201:1215  return _symbol */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_78\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_78\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1129:1222  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Beef.sol\":1541:1719  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"contracts/Beef.sol\":1610:1614  bool */\n      0x00\n        /* \"contracts/Beef.sol\":1626:1639  address owner */\n      dup1\n        /* \"contracts/Beef.sol\":1642:1654  _msgSender() */\n      tag_119\n        /* \"contracts/Beef.sol\":1642:1652  _msgSender */\n      tag_85\n        /* \"contracts/Beef.sol\":1642:1654  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Beef.sol\":1626:1654  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1664:1691  _transfer(owner, to, value) */\n      tag_120\n        /* \"contracts/Beef.sol\":1674:1679  owner */\n      dup2\n        /* \"contracts/Beef.sol\":1681:1683  to */\n      dup6\n        /* \"contracts/Beef.sol\":1685:1690  value */\n      dup6\n        /* \"contracts/Beef.sol\":1664:1673  _transfer */\n      tag_94\n        /* \"contracts/Beef.sol\":1664:1691  _transfer(owner, to, value) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/Beef.sol\":1708:1712  true */\n      0x01\n        /* \"contracts/Beef.sol\":1701:1712  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Beef.sol\":1541:1719  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":1725:1865  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"contracts/Beef.sol\":1805:1812  uint256 */\n      0x00\n        /* \"contracts/Beef.sol\":1831:1842  _allowances */\n      0x02\n        /* \"contracts/Beef.sol\":1831:1849  _allowances[owner] */\n      0x00\n        /* \"contracts/Beef.sol\":1843:1848  owner */\n      dup5\n        /* \"contracts/Beef.sol\":1831:1849  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Beef.sol\":1831:1858  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Beef.sol\":1850:1857  spender */\n      dup4\n        /* \"contracts/Beef.sol\":1831:1858  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Beef.sol\":1824:1858  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":1725:1865  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Beef.sol\":3757:3885  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_87:\n        /* \"contracts/Beef.sol\":3841:3878  _approve(owner, spender, value, true) */\n      tag_130\n        /* \"contracts/Beef.sol\":3850:3855  owner */\n      dup4\n        /* \"contracts/Beef.sol\":3857:3864  spender */\n      dup4\n        /* \"contracts/Beef.sol\":3866:3871  value */\n      dup4\n        /* \"contracts/Beef.sol\":3873:3877  true */\n      0x01\n        /* \"contracts/Beef.sol\":3841:3849  _approve */\n      tag_131\n        /* \"contracts/Beef.sol\":3841:3878  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/Beef.sol\":3757:3885  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":4329:4806  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_92:\n        /* \"contracts/Beef.sol\":4428:4452  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Beef.sol\":4455:4480  allowance(owner, spender) */\n      tag_133\n        /* \"contracts/Beef.sol\":4465:4470  owner */\n      dup5\n        /* \"contracts/Beef.sol\":4472:4479  spender */\n      dup5\n        /* \"contracts/Beef.sol\":4455:4464  allowance */\n      tag_71\n        /* \"contracts/Beef.sol\":4455:4480  allowance(owner, spender) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/Beef.sol\":4428:4480  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":4514:4531  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Beef.sol\":4494:4510  currentAllowance */\n      dup2\n        /* \"contracts/Beef.sol\":4494:4531  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/Beef.sol\":4490:4800  if (currentAllowance != type(uint256).max) {... */\n      tag_134\n      jumpi\n        /* \"contracts/Beef.sol\":4570:4575  value */\n      dup2\n        /* \"contracts/Beef.sol\":4551:4567  currentAllowance */\n      dup2\n        /* \"contracts/Beef.sol\":4551:4575  currentAllowance < value */\n      lt\n        /* \"contracts/Beef.sol\":4547:4677  if (currentAllowance < value) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"contracts/Beef.sol\":4629:4636  spender */\n      dup3\n        /* \"contracts/Beef.sol\":4638:4654  currentAllowance */\n      dup2\n        /* \"contracts/Beef.sol\":4656:4661  value */\n      dup4\n        /* \"contracts/Beef.sol\":4602:4662  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":4547:4677  if (currentAllowance < value) {... */\n    tag_135:\n        /* \"contracts/Beef.sol\":4718:4775  _approve(owner, spender, currentAllowance - value, false) */\n      tag_138\n        /* \"contracts/Beef.sol\":4727:4732  owner */\n      dup5\n        /* \"contracts/Beef.sol\":4734:4741  spender */\n      dup5\n        /* \"contracts/Beef.sol\":4762:4767  value */\n      dup5\n        /* \"contracts/Beef.sol\":4743:4759  currentAllowance */\n      dup5\n        /* \"contracts/Beef.sol\":4743:4767  currentAllowance - value */\n      sub\n        /* \"contracts/Beef.sol\":4769:4774  false */\n      0x00\n        /* \"contracts/Beef.sol\":4718:4726  _approve */\n      tag_131\n        /* \"contracts/Beef.sol\":4718:4775  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/Beef.sol\":4490:4800  if (currentAllowance != type(uint256).max) {... */\n    tag_134:\n        /* \"contracts/Beef.sol\":4418:4806  {... */\n      pop\n        /* \"contracts/Beef.sol\":4329:4806  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":2313:2613  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_94:\n        /* \"contracts/Beef.sol\":2412:2413  0 */\n      0x00\n        /* \"contracts/Beef.sol\":2396:2414  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":2396:2400  from */\n      dup4\n        /* \"contracts/Beef.sol\":2396:2414  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":2392:2478  if (from == address(0)) {... */\n      tag_140\n      jumpi\n        /* \"contracts/Beef.sol\":2464:2465  0 */\n      0x00\n        /* \"contracts/Beef.sol\":2437:2467  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":2392:2478  if (from == address(0)) {... */\n    tag_140:\n        /* \"contracts/Beef.sol\":2505:2506  0 */\n      0x00\n        /* \"contracts/Beef.sol\":2491:2507  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":2491:2493  to */\n      dup3\n        /* \"contracts/Beef.sol\":2491:2507  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":2487:2573  if (to == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"contracts/Beef.sol\":2559:2560  0 */\n      0x00\n        /* \"contracts/Beef.sol\":2530:2562  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":2487:2573  if (to == address(0)) {... */\n    tag_142:\n        /* \"contracts/Beef.sol\":2582:2606  _update(from, to, value) */\n      tag_144\n        /* \"contracts/Beef.sol\":2590:2594  from */\n      dup4\n        /* \"contracts/Beef.sol\":2596:2598  to */\n      dup4\n        /* \"contracts/Beef.sol\":2600:2605  value */\n      dup4\n        /* \"contracts/Beef.sol\":2582:2589  _update */\n      tag_145\n        /* \"contracts/Beef.sol\":2582:2606  _update(from, to, value) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Beef.sol\":2313:2613  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_147\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_148\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_149\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/Beef.sol\":3331:3539  function _mint(address account, uint256 value) internal {... */\n    tag_101:\n        /* \"contracts/Beef.sol\":3420:3421  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3401:3422  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":3401:3408  account */\n      dup3\n        /* \"contracts/Beef.sol\":3401:3422  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":3397:3488  if (account == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"contracts/Beef.sol\":3474:3475  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3445:3477  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":3397:3488  if (account == address(0)) {... */\n    tag_153:\n        /* \"contracts/Beef.sol\":3497:3532  _update(address(0), account, value) */\n      tag_155\n        /* \"contracts/Beef.sol\":3513:3514  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3517:3524  account */\n      dup4\n        /* \"contracts/Beef.sol\":3526:3531  value */\n      dup4\n        /* \"contracts/Beef.sol\":3497:3504  _update */\n      tag_145\n        /* \"contracts/Beef.sol\":3497:3532  _update(address(0), account, value) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Beef.sol\":3331:3539  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":3545:3751  function _burn(address account, uint256 value) internal {... */\n    tag_104:\n        /* \"contracts/Beef.sol\":3634:3635  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3615:3636  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":3615:3622  account */\n      dup3\n        /* \"contracts/Beef.sol\":3615:3636  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":3611:3700  if (account == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"contracts/Beef.sol\":3686:3687  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3659:3689  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":3611:3700  if (account == address(0)) {... */\n    tag_157:\n        /* \"contracts/Beef.sol\":3709:3744  _update(account, address(0), value) */\n      tag_159\n        /* \"contracts/Beef.sol\":3717:3724  account */\n      dup3\n        /* \"contracts/Beef.sol\":3734:3735  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3738:3743  value */\n      dup4\n        /* \"contracts/Beef.sol\":3709:3716  _update */\n      tag_145\n        /* \"contracts/Beef.sol\":3709:3744  _update(account, address(0), value) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Beef.sol\":3545:3751  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":3891:4323  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_131:\n        /* \"contracts/Beef.sol\":4020:4021  0 */\n      0x00\n        /* \"contracts/Beef.sol\":4003:4022  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":4003:4008  owner */\n      dup5\n        /* \"contracts/Beef.sol\":4003:4022  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":3999:4088  if (owner == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"contracts/Beef.sol\":4074:4075  0 */\n      0x00\n        /* \"contracts/Beef.sol\":4045:4077  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":3999:4088  if (owner == address(0)) {... */\n    tag_162:\n        /* \"contracts/Beef.sol\":4120:4121  0 */\n      0x00\n        /* \"contracts/Beef.sol\":4101:4122  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":4101:4108  spender */\n      dup4\n        /* \"contracts/Beef.sol\":4101:4122  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":4097:4187  if (spender == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"contracts/Beef.sol\":4173:4174  0 */\n      0x00\n        /* \"contracts/Beef.sol\":4145:4176  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":4097:4187  if (spender == address(0)) {... */\n    tag_164:\n        /* \"contracts/Beef.sol\":4226:4231  value */\n      dup2\n        /* \"contracts/Beef.sol\":4196:4207  _allowances */\n      0x02\n        /* \"contracts/Beef.sol\":4196:4214  _allowances[owner] */\n      0x00\n        /* \"contracts/Beef.sol\":4208:4213  owner */\n      dup7\n        /* \"contracts/Beef.sol\":4196:4214  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Beef.sol\":4196:4223  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Beef.sol\":4215:4222  spender */\n      dup6\n        /* \"contracts/Beef.sol\":4196:4223  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Beef.sol\":4196:4231  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Beef.sol\":4245:4254  emitEvent */\n      dup1\n        /* \"contracts/Beef.sol\":4241:4317  if (emitEvent) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"contracts/Beef.sol\":4291:4298  spender */\n      dup3\n        /* \"contracts/Beef.sol\":4275:4306  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":4284:4289  owner */\n      dup5\n        /* \"contracts/Beef.sol\":4275:4306  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Beef.sol\":4300:4305  value */\n      dup5\n        /* \"contracts/Beef.sol\":4275:4306  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Beef.sol\":4241:4317  if (emitEvent) {... */\n    tag_166:\n        /* \"contracts/Beef.sol\":3891:4323  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Beef.sol\":2619:3325  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_145:\n        /* \"contracts/Beef.sol\":2724:2725  0 */\n      0x00\n        /* \"contracts/Beef.sol\":2708:2726  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":2708:2712  from */\n      dup4\n        /* \"contracts/Beef.sol\":2708:2726  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":2704:3063  if (from == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"contracts/Beef.sol\":2758:2763  value */\n      dup1\n        /* \"contracts/Beef.sol\":2742:2754  _totalSupply */\n      0x03\n      0x00\n        /* \"contracts/Beef.sol\":2742:2763  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Beef.sol\":2704:3063  if (from == address(0)) {... */\n      jump(tag_172)\n    tag_169:\n        /* \"contracts/Beef.sol\":2794:2813  uint256 fromBalance */\n      0x00\n        /* \"contracts/Beef.sol\":2816:2825  _balances */\n      0x01\n        /* \"contracts/Beef.sol\":2816:2831  _balances[from] */\n      0x00\n        /* \"contracts/Beef.sol\":2826:2830  from */\n      dup6\n        /* \"contracts/Beef.sol\":2816:2831  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Beef.sol\":2794:2831  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/Beef.sol\":2863:2868  value */\n      dup2\n        /* \"contracts/Beef.sol\":2849:2860  fromBalance */\n      dup2\n        /* \"contracts/Beef.sol\":2849:2868  fromBalance < value */\n      lt\n        /* \"contracts/Beef.sol\":2845:2960  if (fromBalance < value) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/Beef.sol\":2920:2924  from */\n      dup4\n        /* \"contracts/Beef.sol\":2926:2937  fromBalance */\n      dup2\n        /* \"contracts/Beef.sol\":2939:2944  value */\n      dup4\n        /* \"contracts/Beef.sol\":2895:2945  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Beef.sol\":2845:2960  if (fromBalance < value) {... */\n    tag_173:\n        /* \"contracts/Beef.sol\":3033:3038  value */\n      dup2\n        /* \"contracts/Beef.sol\":3019:3030  fromBalance */\n      dup2\n        /* \"contracts/Beef.sol\":3019:3038  fromBalance - value */\n      sub\n        /* \"contracts/Beef.sol\":3001:3010  _balances */\n      0x01\n        /* \"contracts/Beef.sol\":3001:3016  _balances[from] */\n      0x00\n        /* \"contracts/Beef.sol\":3011:3015  from */\n      dup7\n        /* \"contracts/Beef.sol\":3001:3016  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Beef.sol\":3001:3038  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Beef.sol\":2780:3063  {... */\n      pop\n        /* \"contracts/Beef.sol\":2704:3063  if (from == address(0)) {... */\n    tag_172:\n        /* \"contracts/Beef.sol\":3091:3092  0 */\n      0x00\n        /* \"contracts/Beef.sol\":3077:3093  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":3077:3079  to */\n      dup3\n        /* \"contracts/Beef.sol\":3077:3093  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Beef.sol\":3073:3278  if (to == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"contracts/Beef.sol\":3153:3158  value */\n      dup1\n        /* \"contracts/Beef.sol\":3137:3149  _totalSupply */\n      0x03\n      0x00\n        /* \"contracts/Beef.sol\":3137:3158  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Beef.sol\":3073:3278  if (to == address(0)) {... */\n      jump(tag_176)\n    tag_175:\n        /* \"contracts/Beef.sol\":3248:3253  value */\n      dup1\n        /* \"contracts/Beef.sol\":3231:3240  _balances */\n      0x01\n        /* \"contracts/Beef.sol\":3231:3244  _balances[to] */\n      0x00\n        /* \"contracts/Beef.sol\":3241:3243  to */\n      dup5\n        /* \"contracts/Beef.sol\":3231:3244  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Beef.sol\":3231:3253  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Beef.sol\":3073:3278  if (to == address(0)) {... */\n    tag_176:\n        /* \"contracts/Beef.sol\":3308:3310  to */\n      dup2\n        /* \"contracts/Beef.sol\":3293:3318  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Beef.sol\":3302:3306  from */\n      dup4\n        /* \"contracts/Beef.sol\":3293:3318  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Beef.sol\":3312:3317  value */\n      dup4\n        /* \"contracts/Beef.sol\":3293:3318  Transfer(from, to, value) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Beef.sol\":2619:3325  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_178:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_179:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_180:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_181:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_182:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_207\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_178\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":711:782   */\n      tag_208\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_179\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_209\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_180\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":881:910   */\n      tag_210\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_181\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_212\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_182\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_184:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_186:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_187:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_218\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_186\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_188:\n        /* \"#utility.yul\":1876:1900   */\n      tag_220\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_221:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_189:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_223\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_188\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_190:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_191:\n        /* \"#utility.yul\":2232:2256   */\n      tag_226\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_190\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_227:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_192:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_229\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_191\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_232\n      tag_184\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2525:2644   */\n    tag_231:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_233\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_189\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_234\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_192\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_193:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_194:\n        /* \"#utility.yul\":3089:3110   */\n      tag_237\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_193\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_239\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_194\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_195:\n        /* \"#utility.yul\":3426:3450   */\n      tag_241\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_190\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_33:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_243\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_195\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_36:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_246\n      tag_184\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3801:3920   */\n    tag_245:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_247\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_189\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_248\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_189\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_249\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_192\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_196:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_197:\n        /* \"#utility.yul\":4491:4513   */\n      tag_252\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_196\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_254\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_197\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_48:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_257\n      tag_184\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4822:4941   */\n    tag_256:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_258\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_192\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_52:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_261\n      tag_184\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5157:5276   */\n    tag_260:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_262\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_189\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_198:\n        /* \"#utility.yul\":5503:5527   */\n      tag_264\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_187\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_60:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_266\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_198\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_70:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_269\n      tag_184\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5861:5980   */\n    tag_268:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_270\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_189\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_271\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_199:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_78:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_274:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_276\n      tag_199\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6664:6748   */\n    tag_275:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:7202   */\n    tag_137:\n        /* \"#utility.yul\":6909:6913   */\n      0x00\n        /* \"#utility.yul\":6947:6949   */\n      0x60\n        /* \"#utility.yul\":6936:6945   */\n      dup3\n        /* \"#utility.yul\":6932:6950   */\n      add\n        /* \"#utility.yul\":6924:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6960:7031   */\n      tag_278\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7017:7026   */\n      dup4\n        /* \"#utility.yul\":7013:7030   */\n      add\n        /* \"#utility.yul\":7004:7010   */\n      dup7\n        /* \"#utility.yul\":6960:7031   */\n      tag_198\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7041:7113   */\n      tag_279\n        /* \"#utility.yul\":7109:7111   */\n      0x20\n        /* \"#utility.yul\":7098:7107   */\n      dup4\n        /* \"#utility.yul\":7094:7112   */\n      add\n        /* \"#utility.yul\":7085:7091   */\n      dup6\n        /* \"#utility.yul\":7041:7113   */\n      tag_195\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7123:7195   */\n      tag_280\n        /* \"#utility.yul\":7191:7193   */\n      0x40\n        /* \"#utility.yul\":7180:7189   */\n      dup4\n        /* \"#utility.yul\":7176:7194   */\n      add\n        /* \"#utility.yul\":7167:7173   */\n      dup5\n        /* \"#utility.yul\":7123:7195   */\n      tag_195\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6760:7202   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_200:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_171:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_283\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_190\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_284\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_190\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_286\n      tag_200\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7542:7578   */\n    tag_285:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122006fee5beee7ed010685e8821f1f9c572837eb2d3dc19ccb5389d66889565afe764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_673": {
									"entryPoint": 218,
									"id": 673,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9486:6",
										"nodeType": "YulBlock",
										"src": "0:9486:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2615:81:6",
													"nodeType": "YulBlock",
													"src": "2615:81:6",
													"statements": [
														{
															"nativeSrc": "2625:65:6",
															"nodeType": "YulAssignment",
															"src": "2625:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:6"
																},
																"nativeSrc": "2636:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:6",
														"nodeType": "YulTypedName",
														"src": "2597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:6",
														"nodeType": "YulTypedName",
														"src": "2607:7:6",
														"type": ""
													}
												],
												"src": "2570:126:6"
											},
											{
												"body": {
													"nativeSrc": "2747:51:6",
													"nodeType": "YulBlock",
													"src": "2747:51:6",
													"statements": [
														{
															"nativeSrc": "2757:35:6",
															"nodeType": "YulAssignment",
															"src": "2757:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:6"
																},
																"nativeSrc": "2768:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:6",
														"nodeType": "YulTypedName",
														"src": "2729:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:6",
														"nodeType": "YulTypedName",
														"src": "2739:7:6",
														"type": ""
													}
												],
												"src": "2702:96:6"
											},
											{
												"body": {
													"nativeSrc": "2847:79:6",
													"nodeType": "YulBlock",
													"src": "2847:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:6",
																"nodeType": "YulBlock",
																"src": "2904:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:6"
																			},
																			"nativeSrc": "2906:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:6"
																		},
																		"nativeSrc": "2906:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:6"
																				},
																				"nativeSrc": "2877:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:6"
																		},
																		"nativeSrc": "2867:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:6"
																},
																"nativeSrc": "2860:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:6"
															},
															"nativeSrc": "2857:63:6",
															"nodeType": "YulIf",
															"src": "2857:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:6",
														"nodeType": "YulTypedName",
														"src": "2840:5:6",
														"type": ""
													}
												],
												"src": "2804:122:6"
											},
											{
												"body": {
													"nativeSrc": "2995:80:6",
													"nodeType": "YulBlock",
													"src": "2995:80:6",
													"statements": [
														{
															"nativeSrc": "3005:22:6",
															"nodeType": "YulAssignment",
															"src": "3005:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:6"
																},
																"nativeSrc": "3014:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:6"
																},
																"nativeSrc": "3036:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:6"
															},
															"nativeSrc": "3036:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:6",
														"nodeType": "YulTypedName",
														"src": "2973:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:6",
														"nodeType": "YulTypedName",
														"src": "2981:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:6",
														"nodeType": "YulTypedName",
														"src": "2989:5:6",
														"type": ""
													}
												],
												"src": "2932:143:6"
											},
											{
												"body": {
													"nativeSrc": "3212:878:6",
													"nodeType": "YulBlock",
													"src": "3212:878:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:6",
																"nodeType": "YulBlock",
																"src": "3258:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:6"
																			},
																			"nativeSrc": "3260:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:6"
																		},
																		"nativeSrc": "3260:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:6"
																		},
																		"nativeSrc": "3229:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:6"
																},
																"nativeSrc": "3225:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:6"
															},
															"nativeSrc": "3222:119:6",
															"nodeType": "YulIf",
															"src": "3222:119:6"
														},
														{
															"nativeSrc": "3351:291:6",
															"nodeType": "YulBlock",
															"src": "3351:291:6",
															"statements": [
																{
																	"nativeSrc": "3366:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3401:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3401:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:6"
																				},
																				"nativeSrc": "3386:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3380:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3380:5:6"
																		},
																		"nativeSrc": "3380:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3451:83:6",
																		"nodeType": "YulBlock",
																		"src": "3451:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3453:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3453:77:6"
																					},
																					"nativeSrc": "3453:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3453:79:6"
																				},
																				"nativeSrc": "3453:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3453:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3431:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3431:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3420:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3420:2:6"
																		},
																		"nativeSrc": "3420:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:30:6"
																	},
																	"nativeSrc": "3417:117:6",
																	"nodeType": "YulIf",
																	"src": "3417:117:6"
																},
																{
																	"nativeSrc": "3548:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3548:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3604:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3604:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3615:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3600:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3600:3:6"
																				},
																				"nativeSrc": "3600:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3600:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3558:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3558:41:6"
																		},
																		"nativeSrc": "3558:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3548:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3652:292:6",
															"nodeType": "YulBlock",
															"src": "3652:292:6",
															"statements": [
																{
																	"nativeSrc": "3667:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3691:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3691:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3702:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3702:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3687:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:6"
																				},
																				"nativeSrc": "3687:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3681:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3681:5:6"
																		},
																		"nativeSrc": "3681:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3753:83:6",
																		"nodeType": "YulBlock",
																		"src": "3753:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3755:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3755:77:6"
																					},
																					"nativeSrc": "3755:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:79:6"
																				},
																				"nativeSrc": "3755:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3755:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3725:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3733:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3733:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3722:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:6"
																		},
																		"nativeSrc": "3722:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:30:6"
																	},
																	"nativeSrc": "3719:117:6",
																	"nodeType": "YulIf",
																	"src": "3719:117:6"
																},
																{
																	"nativeSrc": "3850:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3850:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3917:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:6"
																				},
																				"nativeSrc": "3902:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3926:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3860:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3860:41:6"
																		},
																		"nativeSrc": "3860:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3954:129:6",
															"nodeType": "YulBlock",
															"src": "3954:129:6",
															"statements": [
																{
																	"nativeSrc": "3969:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3969:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3983:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3973:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3973:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3999:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3999:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:6"
																				},
																				"nativeSrc": "4041:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4009:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4009:31:6"
																		},
																		"nativeSrc": "4009:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3999:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3081:1009:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:6",
														"nodeType": "YulTypedName",
														"src": "3166:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:6",
														"nodeType": "YulTypedName",
														"src": "3177:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:6",
														"nodeType": "YulTypedName",
														"src": "3189:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:6",
														"nodeType": "YulTypedName",
														"src": "3197:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:6",
														"nodeType": "YulTypedName",
														"src": "3205:6:6",
														"type": ""
													}
												],
												"src": "3081:1009:6"
											},
											{
												"body": {
													"nativeSrc": "4161:53:6",
													"nodeType": "YulBlock",
													"src": "4161:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4183:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:6"
																		},
																		"nativeSrc": "4183:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:6"
																},
																"nativeSrc": "4171:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:6"
															},
															"nativeSrc": "4171:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4096:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:6",
														"nodeType": "YulTypedName",
														"src": "4149:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:6",
														"nodeType": "YulTypedName",
														"src": "4156:3:6",
														"type": ""
													}
												],
												"src": "4096:118:6"
											},
											{
												"body": {
													"nativeSrc": "4318:124:6",
													"nodeType": "YulBlock",
													"src": "4318:124:6",
													"statements": [
														{
															"nativeSrc": "4328:26:6",
															"nodeType": "YulAssignment",
															"src": "4328:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:6"
																},
																"nativeSrc": "4336:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:6"
																		},
																		"nativeSrc": "4417:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4364:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:6"
																},
																"nativeSrc": "4364:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:6"
															},
															"nativeSrc": "4364:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4220:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:6",
														"nodeType": "YulTypedName",
														"src": "4290:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:6",
														"nodeType": "YulTypedName",
														"src": "4302:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:6",
														"nodeType": "YulTypedName",
														"src": "4313:4:6",
														"type": ""
													}
												],
												"src": "4220:222:6"
											},
											{
												"body": {
													"nativeSrc": "4507:40:6",
													"nodeType": "YulBlock",
													"src": "4507:40:6",
													"statements": [
														{
															"nativeSrc": "4518:22:6",
															"nodeType": "YulAssignment",
															"src": "4518:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4534:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4534:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4528:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4528:5:6"
																},
																"nativeSrc": "4528:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4528:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4518:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4448:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4490:5:6",
														"nodeType": "YulTypedName",
														"src": "4490:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4500:6:6",
														"nodeType": "YulTypedName",
														"src": "4500:6:6",
														"type": ""
													}
												],
												"src": "4448:99:6"
											},
											{
												"body": {
													"nativeSrc": "4581:152:6",
													"nodeType": "YulBlock",
													"src": "4581:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4598:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4598:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4601:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4601:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4591:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:6"
																},
																"nativeSrc": "4591:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4591:88:6"
															},
															"nativeSrc": "4591:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4591:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4695:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4695:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4698:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4698:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4688:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:6"
																},
																"nativeSrc": "4688:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4688:15:6"
															},
															"nativeSrc": "4688:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4688:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4719:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4719:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4722:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4712:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:6"
																},
																"nativeSrc": "4712:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4712:15:6"
															},
															"nativeSrc": "4712:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4712:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4553:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4553:180:6"
											},
											{
												"body": {
													"nativeSrc": "4790:269:6",
													"nodeType": "YulBlock",
													"src": "4790:269:6",
													"statements": [
														{
															"nativeSrc": "4800:22:6",
															"nodeType": "YulAssignment",
															"src": "4800:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4814:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4814:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4820:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4820:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:6"
																},
																"nativeSrc": "4810:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4810:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4800:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:6"
																}
															]
														},
														{
															"nativeSrc": "4831:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4831:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4861:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4861:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4867:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4867:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4857:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4857:3:6"
																},
																"nativeSrc": "4857:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4857:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4835:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4835:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4908:51:6",
																"nodeType": "YulBlock",
																"src": "4908:51:6",
																"statements": [
																	{
																		"nativeSrc": "4922:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4922:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4936:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4936:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4944:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4944:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4932:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4932:3:6"
																			},
																			"nativeSrc": "4932:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4932:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4922:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4922:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4888:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4888:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4881:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4881:6:6"
																},
																"nativeSrc": "4881:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4881:26:6"
															},
															"nativeSrc": "4878:81:6",
															"nodeType": "YulIf",
															"src": "4878:81:6"
														},
														{
															"body": {
																"nativeSrc": "5011:42:6",
																"nodeType": "YulBlock",
																"src": "5011:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5025:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5025:16:6"
																			},
																			"nativeSrc": "5025:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5025:18:6"
																		},
																		"nativeSrc": "5025:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5025:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4975:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4975:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4998:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4998:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5006:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5006:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4995:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:2:6"
																		},
																		"nativeSrc": "4995:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4972:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4972:2:6"
																},
																"nativeSrc": "4972:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4972:38:6"
															},
															"nativeSrc": "4969:84:6",
															"nodeType": "YulIf",
															"src": "4969:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4739:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4774:4:6",
														"nodeType": "YulTypedName",
														"src": "4774:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4783:6:6",
														"nodeType": "YulTypedName",
														"src": "4783:6:6",
														"type": ""
													}
												],
												"src": "4739:320:6"
											},
											{
												"body": {
													"nativeSrc": "5119:87:6",
													"nodeType": "YulBlock",
													"src": "5119:87:6",
													"statements": [
														{
															"nativeSrc": "5129:11:6",
															"nodeType": "YulAssignment",
															"src": "5129:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "5137:3:6",
																"nodeType": "YulIdentifier",
																"src": "5137:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5129:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5129:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5160:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5160:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5150:6:6"
																},
																"nativeSrc": "5150:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5150:14:6"
															},
															"nativeSrc": "5150:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "5150:14:6"
														},
														{
															"nativeSrc": "5173:26:6",
															"nodeType": "YulAssignment",
															"src": "5173:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5194:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5194:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5181:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5181:9:6"
																},
																"nativeSrc": "5181:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5181:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5173:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5173:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5065:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5106:3:6",
														"nodeType": "YulTypedName",
														"src": "5106:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5114:4:6",
														"nodeType": "YulTypedName",
														"src": "5114:4:6",
														"type": ""
													}
												],
												"src": "5065:141:6"
											},
											{
												"body": {
													"nativeSrc": "5256:49:6",
													"nodeType": "YulBlock",
													"src": "5256:49:6",
													"statements": [
														{
															"nativeSrc": "5266:33:6",
															"nodeType": "YulAssignment",
															"src": "5266:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5284:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5284:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5291:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5291:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:6"
																		},
																		"nativeSrc": "5280:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5280:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5276:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5276:3:6"
																},
																"nativeSrc": "5276:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5276:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5266:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5212:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5239:5:6",
														"nodeType": "YulTypedName",
														"src": "5239:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5249:6:6",
														"nodeType": "YulTypedName",
														"src": "5249:6:6",
														"type": ""
													}
												],
												"src": "5212:93:6"
											},
											{
												"body": {
													"nativeSrc": "5364:54:6",
													"nodeType": "YulBlock",
													"src": "5364:54:6",
													"statements": [
														{
															"nativeSrc": "5374:37:6",
															"nodeType": "YulAssignment",
															"src": "5374:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5399:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5399:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5405:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5405:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5395:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:6"
																},
																"nativeSrc": "5395:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5395:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5374:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5374:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5311:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5339:4:6",
														"nodeType": "YulTypedName",
														"src": "5339:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5345:5:6",
														"nodeType": "YulTypedName",
														"src": "5345:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5355:8:6",
														"nodeType": "YulTypedName",
														"src": "5355:8:6",
														"type": ""
													}
												],
												"src": "5311:107:6"
											},
											{
												"body": {
													"nativeSrc": "5500:317:6",
													"nodeType": "YulBlock",
													"src": "5500:317:6",
													"statements": [
														{
															"nativeSrc": "5510:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5510:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5531:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5531:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5543:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5543:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5527:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5527:3:6"
																},
																"nativeSrc": "5527:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5527:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5514:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5514:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5554:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5554:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5585:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5585:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5596:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5596:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5566:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5566:18:6"
																},
																"nativeSrc": "5566:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5566:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5558:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5558:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5672:51:6",
															"nodeType": "YulAssignment",
															"src": "5672:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5703:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5703:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5714:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5714:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5684:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5684:18:6"
																},
																"nativeSrc": "5684:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5684:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5672:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5672:8:6"
																}
															]
														},
														{
															"nativeSrc": "5732:30:6",
															"nodeType": "YulAssignment",
															"src": "5732:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5745:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5745:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5756:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5756:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5752:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5752:3:6"
																		},
																		"nativeSrc": "5752:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5752:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5741:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:6"
																},
																"nativeSrc": "5741:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5741:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5732:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5732:5:6"
																}
															]
														},
														{
															"nativeSrc": "5771:40:6",
															"nodeType": "YulAssignment",
															"src": "5771:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5784:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5784:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5795:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5795:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5805:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5805:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5791:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:6"
																		},
																		"nativeSrc": "5791:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5781:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5781:2:6"
																},
																"nativeSrc": "5781:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5781:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5771:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5771:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5424:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5461:5:6",
														"nodeType": "YulTypedName",
														"src": "5461:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5468:10:6",
														"nodeType": "YulTypedName",
														"src": "5468:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5480:8:6",
														"nodeType": "YulTypedName",
														"src": "5480:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5493:6:6",
														"nodeType": "YulTypedName",
														"src": "5493:6:6",
														"type": ""
													}
												],
												"src": "5424:393:6"
											},
											{
												"body": {
													"nativeSrc": "5868:32:6",
													"nodeType": "YulBlock",
													"src": "5868:32:6",
													"statements": [
														{
															"nativeSrc": "5878:16:6",
															"nodeType": "YulAssignment",
															"src": "5878:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "5889:5:6",
																"nodeType": "YulIdentifier",
																"src": "5889:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5878:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5878:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5823:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5850:5:6",
														"nodeType": "YulTypedName",
														"src": "5850:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5860:7:6",
														"nodeType": "YulTypedName",
														"src": "5860:7:6",
														"type": ""
													}
												],
												"src": "5823:77:6"
											},
											{
												"body": {
													"nativeSrc": "5938:28:6",
													"nodeType": "YulBlock",
													"src": "5938:28:6",
													"statements": [
														{
															"nativeSrc": "5948:12:6",
															"nodeType": "YulAssignment",
															"src": "5948:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5955:5:6",
																"nodeType": "YulIdentifier",
																"src": "5955:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5948:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5906:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:6",
														"nodeType": "YulTypedName",
														"src": "5924:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5934:3:6",
														"nodeType": "YulTypedName",
														"src": "5934:3:6",
														"type": ""
													}
												],
												"src": "5906:60:6"
											},
											{
												"body": {
													"nativeSrc": "6032:82:6",
													"nodeType": "YulBlock",
													"src": "6032:82:6",
													"statements": [
														{
															"nativeSrc": "6042:66:6",
															"nodeType": "YulAssignment",
															"src": "6042:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6100:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6100:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6082:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6082:17:6"
																				},
																				"nativeSrc": "6082:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6082:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6073:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "6073:8:6"
																		},
																		"nativeSrc": "6073:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6073:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6055:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6055:17:6"
																},
																"nativeSrc": "6055:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6055:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6042:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6042:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5972:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6012:5:6",
														"nodeType": "YulTypedName",
														"src": "6012:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6022:9:6",
														"nodeType": "YulTypedName",
														"src": "6022:9:6",
														"type": ""
													}
												],
												"src": "5972:142:6"
											},
											{
												"body": {
													"nativeSrc": "6167:28:6",
													"nodeType": "YulBlock",
													"src": "6167:28:6",
													"statements": [
														{
															"nativeSrc": "6177:12:6",
															"nodeType": "YulAssignment",
															"src": "6177:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6184:5:6",
																"nodeType": "YulIdentifier",
																"src": "6184:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6120:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6153:5:6",
														"nodeType": "YulTypedName",
														"src": "6153:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6163:3:6",
														"nodeType": "YulTypedName",
														"src": "6163:3:6",
														"type": ""
													}
												],
												"src": "6120:75:6"
											},
											{
												"body": {
													"nativeSrc": "6277:193:6",
													"nodeType": "YulBlock",
													"src": "6277:193:6",
													"statements": [
														{
															"nativeSrc": "6287:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6287:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6342:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6342:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6311:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6311:30:6"
																},
																"nativeSrc": "6311:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6311:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6291:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6291:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6366:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6366:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6406:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6406:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6400:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6400:5:6"
																				},
																				"nativeSrc": "6400:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6400:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6413:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6413:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6445:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6445:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6421:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6421:23:6"
																				},
																				"nativeSrc": "6421:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6421:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6372:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6372:27:6"
																		},
																		"nativeSrc": "6372:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6359:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6359:6:6"
																},
																"nativeSrc": "6359:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6359:105:6"
															},
															"nativeSrc": "6359:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6359:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6201:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6254:4:6",
														"nodeType": "YulTypedName",
														"src": "6254:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6260:6:6",
														"nodeType": "YulTypedName",
														"src": "6260:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6268:7:6",
														"nodeType": "YulTypedName",
														"src": "6268:7:6",
														"type": ""
													}
												],
												"src": "6201:269:6"
											},
											{
												"body": {
													"nativeSrc": "6525:24:6",
													"nodeType": "YulBlock",
													"src": "6525:24:6",
													"statements": [
														{
															"nativeSrc": "6535:8:6",
															"nodeType": "YulAssignment",
															"src": "6535:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6542:1:6",
																"nodeType": "YulLiteral",
																"src": "6542:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6535:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6476:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6521:3:6",
														"nodeType": "YulTypedName",
														"src": "6521:3:6",
														"type": ""
													}
												],
												"src": "6476:73:6"
											},
											{
												"body": {
													"nativeSrc": "6608:136:6",
													"nodeType": "YulBlock",
													"src": "6608:136:6",
													"statements": [
														{
															"nativeSrc": "6618:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6618:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6632:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6632:30:6"
																},
																"nativeSrc": "6632:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6632:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6622:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6622:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6717:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6717:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6723:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6723:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6731:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6731:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6673:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6673:43:6"
																},
																"nativeSrc": "6673:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6673:65:6"
															},
															"nativeSrc": "6673:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6673:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6555:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6594:4:6",
														"nodeType": "YulTypedName",
														"src": "6594:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6600:6:6",
														"nodeType": "YulTypedName",
														"src": "6600:6:6",
														"type": ""
													}
												],
												"src": "6555:189:6"
											},
											{
												"body": {
													"nativeSrc": "6800:136:6",
													"nodeType": "YulBlock",
													"src": "6800:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6867:63:6",
																"nodeType": "YulBlock",
																"src": "6867:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6911:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6911:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6918:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6918:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6881:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6881:29:6"
																			},
																			"nativeSrc": "6881:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6881:39:6"
																		},
																		"nativeSrc": "6881:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6881:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6820:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6820:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6827:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6827:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6817:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6817:2:6"
																},
																"nativeSrc": "6817:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6817:14:6"
															},
															"nativeSrc": "6810:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6832:26:6",
																"nodeType": "YulBlock",
																"src": "6832:26:6",
																"statements": [
																	{
																		"nativeSrc": "6834:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6834:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6847:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6847:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6854:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6854:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6843:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6843:3:6"
																			},
																			"nativeSrc": "6843:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6843:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6834:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6834:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6814:2:6",
																"nodeType": "YulBlock",
																"src": "6814:2:6",
																"statements": []
															},
															"src": "6810:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6750:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6788:5:6",
														"nodeType": "YulTypedName",
														"src": "6788:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6795:3:6",
														"nodeType": "YulTypedName",
														"src": "6795:3:6",
														"type": ""
													}
												],
												"src": "6750:186:6"
											},
											{
												"body": {
													"nativeSrc": "7021:464:6",
													"nodeType": "YulBlock",
													"src": "7021:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7047:431:6",
																"nodeType": "YulBlock",
																"src": "7047:431:6",
																"statements": [
																	{
																		"nativeSrc": "7061:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7061:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7109:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7109:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7077:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "7077:31:6"
																			},
																			"nativeSrc": "7077:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7077:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7065:8:6",
																				"nodeType": "YulTypedName",
																				"src": "7065:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7128:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7128:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7151:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7151:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7179:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "7179:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7161:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "7161:17:6"
																					},
																					"nativeSrc": "7161:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7161:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7147:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7147:3:6"
																			},
																			"nativeSrc": "7147:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7147:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7132:11:6",
																				"nodeType": "YulTypedName",
																				"src": "7132:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7348:27:6",
																			"nodeType": "YulBlock",
																			"src": "7348:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7350:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7350:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7365:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7365:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7350:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7350:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7332:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7332:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7344:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7344:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7329:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7329:2:6"
																			},
																			"nativeSrc": "7329:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7329:18:6"
																		},
																		"nativeSrc": "7326:49:6",
																		"nodeType": "YulIf",
																		"src": "7326:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7417:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7417:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7434:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7434:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7462:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7462:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7444:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7444:17:6"
																							},
																							"nativeSrc": "7444:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7444:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7430:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7430:3:6"
																					},
																					"nativeSrc": "7430:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7430:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7388:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7388:28:6"
																			},
																			"nativeSrc": "7388:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7388:80:6"
																		},
																		"nativeSrc": "7388:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7388:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7038:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7038:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7043:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7043:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7035:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7035:2:6"
																},
																"nativeSrc": "7035:11:6",
																"nodeType": "YulFunctionCall",
																"src": "7035:11:6"
															},
															"nativeSrc": "7032:446:6",
															"nodeType": "YulIf",
															"src": "7032:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6942:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6997:5:6",
														"nodeType": "YulTypedName",
														"src": "6997:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7004:3:6",
														"nodeType": "YulTypedName",
														"src": "7004:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7009:10:6",
														"nodeType": "YulTypedName",
														"src": "7009:10:6",
														"type": ""
													}
												],
												"src": "6942:543:6"
											},
											{
												"body": {
													"nativeSrc": "7554:54:6",
													"nodeType": "YulBlock",
													"src": "7554:54:6",
													"statements": [
														{
															"nativeSrc": "7564:37:6",
															"nodeType": "YulAssignment",
															"src": "7564:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7589:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7589:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7595:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7595:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7585:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:6"
																},
																"nativeSrc": "7585:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7585:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7564:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7564:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7491:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7529:4:6",
														"nodeType": "YulTypedName",
														"src": "7529:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7535:5:6",
														"nodeType": "YulTypedName",
														"src": "7535:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7545:8:6",
														"nodeType": "YulTypedName",
														"src": "7545:8:6",
														"type": ""
													}
												],
												"src": "7491:117:6"
											},
											{
												"body": {
													"nativeSrc": "7665:118:6",
													"nodeType": "YulBlock",
													"src": "7665:118:6",
													"statements": [
														{
															"nativeSrc": "7675:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7675:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7724:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7724:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7727:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7727:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7720:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7720:3:6"
																				},
																				"nativeSrc": "7720:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7720:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7739:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7739:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7735:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7735:3:6"
																				},
																				"nativeSrc": "7735:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7735:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7691:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7691:28:6"
																		},
																		"nativeSrc": "7691:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7687:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7687:3:6"
																},
																"nativeSrc": "7687:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7687:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7679:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7679:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7752:25:6",
															"nodeType": "YulAssignment",
															"src": "7752:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7766:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7766:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7772:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7772:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7762:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7762:3:6"
																},
																"nativeSrc": "7762:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7762:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7752:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7614:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7642:4:6",
														"nodeType": "YulTypedName",
														"src": "7642:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7648:5:6",
														"nodeType": "YulTypedName",
														"src": "7648:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7658:6:6",
														"nodeType": "YulTypedName",
														"src": "7658:6:6",
														"type": ""
													}
												],
												"src": "7614:169:6"
											},
											{
												"body": {
													"nativeSrc": "7869:214:6",
													"nodeType": "YulBlock",
													"src": "7869:214:6",
													"statements": [
														{
															"nativeSrc": "8002:37:6",
															"nodeType": "YulAssignment",
															"src": "8002:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8029:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8029:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8035:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8035:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8010:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "8010:18:6"
																},
																"nativeSrc": "8010:29:6",
																"nodeType": "YulFunctionCall",
																"src": "8010:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8002:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8002:4:6"
																}
															]
														},
														{
															"nativeSrc": "8048:29:6",
															"nodeType": "YulAssignment",
															"src": "8048:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8059:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8059:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8069:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8069:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8072:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8072:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8065:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8065:3:6"
																		},
																		"nativeSrc": "8065:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8065:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8056:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8056:2:6"
																},
																"nativeSrc": "8056:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8056:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8048:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8048:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7788:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7850:4:6",
														"nodeType": "YulTypedName",
														"src": "7850:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7856:3:6",
														"nodeType": "YulTypedName",
														"src": "7856:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7864:4:6",
														"nodeType": "YulTypedName",
														"src": "7864:4:6",
														"type": ""
													}
												],
												"src": "7788:295:6"
											},
											{
												"body": {
													"nativeSrc": "8180:1303:6",
													"nodeType": "YulBlock",
													"src": "8180:1303:6",
													"statements": [
														{
															"nativeSrc": "8191:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8191:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8238:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8238:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8205:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8205:32:6"
																},
																"nativeSrc": "8205:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8205:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8195:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8195:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8327:22:6",
																"nodeType": "YulBlock",
																"src": "8327:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8329:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8329:16:6"
																			},
																			"nativeSrc": "8329:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8329:18:6"
																		},
																		"nativeSrc": "8329:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8299:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8307:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8307:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8296:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8296:2:6"
																},
																"nativeSrc": "8296:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8296:30:6"
															},
															"nativeSrc": "8293:56:6",
															"nodeType": "YulIf",
															"src": "8293:56:6"
														},
														{
															"nativeSrc": "8359:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8359:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8405:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8405:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8399:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8399:5:6"
																		},
																		"nativeSrc": "8399:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8373:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8373:25:6"
																},
																"nativeSrc": "8373:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8373:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8363:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8363:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8504:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8504:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8510:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8510:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8518:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8518:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8458:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8458:45:6"
																},
																"nativeSrc": "8458:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8458:67:6"
															},
															"nativeSrc": "8458:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8458:67:6"
														},
														{
															"nativeSrc": "8535:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8535:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8552:1:6",
																"nodeType": "YulLiteral",
																"src": "8552:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8539:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8539:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8563:17:6",
															"nodeType": "YulAssignment",
															"src": "8563:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8576:4:6",
																"nodeType": "YulLiteral",
																"src": "8576:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8563:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8563:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8627:611:6",
																		"nodeType": "YulBlock",
																		"src": "8627:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8641:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8641:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8660:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8660:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8672:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8672:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8668:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8668:3:6"
																							},
																							"nativeSrc": "8668:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8668:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8656:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8656:3:6"
																					},
																					"nativeSrc": "8656:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8656:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8645:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8645:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8692:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8692:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8738:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8738:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8706:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8706:31:6"
																					},
																					"nativeSrc": "8706:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8706:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8696:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8696:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8756:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8756:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8765:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8765:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8760:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8760:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8824:163:6",
																					"nodeType": "YulBlock",
																					"src": "8824:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8849:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8849:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8867:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8867:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8872:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8872:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8863:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8863:3:6"
																												},
																												"nativeSrc": "8863:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8863:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8857:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8857:5:6"
																										},
																										"nativeSrc": "8857:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8857:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8842:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8842:6:6"
																								},
																								"nativeSrc": "8842:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8842:42:6"
																							},
																							"nativeSrc": "8842:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8842:42:6"
																						},
																						{
																							"nativeSrc": "8901:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8901:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8915:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8915:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8923:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8923:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8911:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8911:3:6"
																								},
																								"nativeSrc": "8911:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8911:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8901:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8901:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8942:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8942:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8959:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8959:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8970:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8970:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8955:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8955:3:6"
																								},
																								"nativeSrc": "8955:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8955:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8942:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8942:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8790:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8790:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8793:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8793:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8787:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8787:2:6"
																					},
																					"nativeSrc": "8787:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8787:14:6"
																				},
																				"nativeSrc": "8779:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8802:21:6",
																					"nodeType": "YulBlock",
																					"src": "8802:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8804:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8804:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8813:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8813:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8816:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8816:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8809:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8809:3:6"
																								},
																								"nativeSrc": "8809:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8809:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8804:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8804:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8783:3:6",
																					"nodeType": "YulBlock",
																					"src": "8783:3:6",
																					"statements": []
																				},
																				"src": "8779:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "9023:156:6",
																					"nodeType": "YulBlock",
																					"src": "9023:156:6",
																					"statements": [
																						{
																							"nativeSrc": "9041:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9041:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9068:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9068:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9073:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9073:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9064:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9064:3:6"
																										},
																										"nativeSrc": "9064:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9064:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9058:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9058:5:6"
																								},
																								"nativeSrc": "9058:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9058:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9045:9:6",
																									"nodeType": "YulTypedName",
																									"src": "9045:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9108:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9108:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9135:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9135:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9150:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "9150:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9158:4:6",
																														"nodeType": "YulLiteral",
																														"src": "9158:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9146:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9146:3:6"
																												},
																												"nativeSrc": "9146:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9146:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9116:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "9116:18:6"
																										},
																										"nativeSrc": "9116:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9116:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9101:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9101:6:6"
																								},
																								"nativeSrc": "9101:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9101:64:6"
																							},
																							"nativeSrc": "9101:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9101:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9006:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "9006:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9015:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "9015:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9003:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "9003:2:6"
																					},
																					"nativeSrc": "9003:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9003:19:6"
																				},
																				"nativeSrc": "9000:179:6",
																				"nodeType": "YulIf",
																				"src": "9000:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9199:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9199:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9213:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9213:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9221:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9221:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9209:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9209:3:6"
																									},
																									"nativeSrc": "9209:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9209:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9225:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9225:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9205:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9205:3:6"
																							},
																							"nativeSrc": "9205:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9205:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9192:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9192:6:6"
																					},
																					"nativeSrc": "9192:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9192:36:6"
																				},
																				"nativeSrc": "9192:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9192:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8620:618:6",
																	"nodeType": "YulCase",
																	"src": "8620:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8625:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8625:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9255:222:6",
																		"nodeType": "YulBlock",
																		"src": "9255:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9269:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9269:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9282:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9282:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9273:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9273:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9306:67:6",
																					"nodeType": "YulBlock",
																					"src": "9306:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9324:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9324:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9343:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9343:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9348:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9348:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9339:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9339:3:6"
																										},
																										"nativeSrc": "9339:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9339:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9333:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9333:5:6"
																								},
																								"nativeSrc": "9333:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9333:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9324:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9324:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9299:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9299:6:6"
																				},
																				"nativeSrc": "9296:77:6",
																				"nodeType": "YulIf",
																				"src": "9296:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9393:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9393:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9452:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9452:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9459:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9459:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9399:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9399:52:6"
																							},
																							"nativeSrc": "9399:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9399:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9386:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9386:6:6"
																					},
																					"nativeSrc": "9386:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9386:81:6"
																				},
																				"nativeSrc": "9386:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9386:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9247:230:6",
																	"nodeType": "YulCase",
																	"src": "9247:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8600:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8608:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8608:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8597:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8597:2:6"
																},
																"nativeSrc": "8597:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8597:14:6"
															},
															"nativeSrc": "8590:887:6",
															"nodeType": "YulSwitch",
															"src": "8590:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8088:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8169:4:6",
														"nodeType": "YulTypedName",
														"src": "8169:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8175:3:6",
														"nodeType": "YulTypedName",
														"src": "8175:3:6",
														"type": ""
													}
												],
												"src": "8088:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516118e53803806118e583398181016040528101906100319190610342565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906103d9565b60405180910390fd5b6100b1816100da60201b60201c565b5082600490816100c191906105ff565b5081600590816100d191906105ff565b505050506106ce565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101fa826101b4565b810181811067ffffffffffffffff82111715610219576102186101c4565b5b80604052505050565b5f61022b61019b565b905061023782826101f1565b919050565b5f67ffffffffffffffff821115610256576102556101c4565b5b61025f826101b4565b9050602081019050919050565b8281835e5f83830152505050565b5f61028c6102878461023c565b610222565b9050828152602081018484840111156102a8576102a76101b0565b5b6102b384828561026c565b509392505050565b5f82601f8301126102cf576102ce6101ac565b5b81516102df84826020860161027a565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610311826102e8565b9050919050565b61032181610307565b811461032b575f80fd5b50565b5f8151905061033c81610318565b92915050565b5f805f60608486031215610359576103586101a4565b5b5f84015167ffffffffffffffff811115610376576103756101a8565b5b610382868287016102bb565b935050602084015167ffffffffffffffff8111156103a3576103a26101a8565b5b6103af868287016102bb565b92505060406103c08682870161032e565b9150509250925092565b6103d381610307565b82525050565b5f6020820190506103ec5f8301846103ca565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061044057607f821691505b602082108103610453576104526103fc565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104b57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261047a565b6104bf868361047a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6105036104fe6104f9846104d7565b6104e0565b6104d7565b9050919050565b5f819050919050565b61051c836104e9565b6105306105288261050a565b848454610486565b825550505050565b5f90565b610544610538565b61054f818484610513565b505050565b5b81811015610572576105675f8261053c565b600181019050610555565b5050565b601f8211156105b75761058881610459565b6105918461046b565b810160208510156105a0578190505b6105b46105ac8561046b565b830182610554565b50505b505050565b5f82821c905092915050565b5f6105d75f19846008026105bc565b1980831691505092915050565b5f6105ef83836105c8565b9150826002028217905092915050565b610608826103f2565b67ffffffffffffffff811115610621576106206101c4565b5b61062b8254610429565b610636828285610576565b5f60209050601f831160018114610667575f8415610655578287015190505b61065f85826105e4565b8655506106c6565b601f19841661067586610459565b5f5b8281101561069c57848901518255600182019150602085019450602081019050610677565b868310156106b957848901516106b5601f8916826105c8565b8355505b6001600288020188555050505b505050505050565b61120a806106db5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610e58565b60405180910390f35b610124600480360381019061011f9190610f09565b610360565b6040516101319190610f61565b60405180910390f35b610142610382565b60405161014f9190610f89565b60405180910390f35b610172600480360381019061016d9190610fa2565b61038b565b60405161017f9190610f61565b60405180910390f35b6101906103b9565b60405161019d919061100d565b60405180910390f35b6101c060048036038101906101bb9190610f09565b6103c1565b005b6101dc60048036038101906101d79190611026565b6103d7565b005b6101f860048036038101906101f39190611051565b6103e4565b6040516102059190610f89565b60405180910390f35b61021661042a565b005b61022061043d565b60405161022d919061108b565b60405180910390f35b61023e610464565b60405161024b9190610e58565b60405180910390f35b61026e60048036038101906102699190610f09565b6104f4565b60405161027b9190610f61565b60405180910390f35b61029e600480360381019061029991906110a4565b610516565b6040516102ab9190610f89565b60405180910390f35b6102ce60048036038101906102c99190611051565b610598565b005b6060600480546102df9061110f565b80601f016020809104026020016040519081016040528092919081815260200182805461030b9061110f565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a61061c565b9050610377818585610623565b600191505092915050565b5f600354905090565b5f8061039561061c565b90506103a2858285610635565b6103ad8585856106c7565b60019150509392505050565b5f6012905090565b6103c96107b7565b6103d3828261083e565b5050565b6103e133826108bd565b50565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104326107b7565b61043b5f61093c565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546104739061110f565b80601f016020809104026020016040519081016040528092919081815260200182805461049f9061110f565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b5f806104fe61061c565b905061050b8185856106c7565b600191505092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6105a06107b7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610610575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610607919061108b565b60405180910390fd5b6106198161093c565b50565b5f33905090565b61063083838360016109fd565b505050565b5f6106408484610516565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c157818110156106b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106a99392919061113f565b60405180910390fd5b6106c084848484035f6109fd565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610737575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072e919061108b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079e919061108b565b60405180910390fd5b6107b2838383610bcc565b505050565b6107bf61061c565b73ffffffffffffffffffffffffffffffffffffffff166107dd61043d565b73ffffffffffffffffffffffffffffffffffffffff161461083c5761080061061c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610833919061108b565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108a5919061108b565b60405180910390fd5b6108b95f8383610bcc565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610924919061108b565b60405180910390fd5b610938825f83610bcc565b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a6d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a64919061108b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610add575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad4919061108b565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bc6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbd9190610f89565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1c578060035f828254610c1091906111a1565b92505081905550610cec565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ca6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c9d9392919061113f565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d33578060035f8282540392505081905550610d7e565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ddb9190610f89565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e2a82610de8565b610e348185610df2565b9350610e44818560208601610e02565b610e4d81610e10565b840191505092915050565b5f6020820190508181035f830152610e708184610e20565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ea582610e7c565b9050919050565b610eb581610e9b565b8114610ebf575f80fd5b50565b5f81359050610ed081610eac565b92915050565b5f819050919050565b610ee881610ed6565b8114610ef2575f80fd5b50565b5f81359050610f0381610edf565b92915050565b5f8060408385031215610f1f57610f1e610e78565b5b5f610f2c85828601610ec2565b9250506020610f3d85828601610ef5565b9150509250929050565b5f8115159050919050565b610f5b81610f47565b82525050565b5f602082019050610f745f830184610f52565b92915050565b610f8381610ed6565b82525050565b5f602082019050610f9c5f830184610f7a565b92915050565b5f805f60608486031215610fb957610fb8610e78565b5b5f610fc686828701610ec2565b9350506020610fd786828701610ec2565b9250506040610fe886828701610ef5565b9150509250925092565b5f60ff82169050919050565b61100781610ff2565b82525050565b5f6020820190506110205f830184610ffe565b92915050565b5f6020828403121561103b5761103a610e78565b5b5f61104884828501610ef5565b91505092915050565b5f6020828403121561106657611065610e78565b5b5f61107384828501610ec2565b91505092915050565b61108581610e9b565b82525050565b5f60208201905061109e5f83018461107c565b92915050565b5f80604083850312156110ba576110b9610e78565b5b5f6110c785828601610ec2565b92505060206110d885828601610ec2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061112657607f821691505b602082108103611139576111386110e2565b5b50919050565b5f6060820190506111525f83018661107c565b61115f6020830185610f7a565b61116c6040830184610f7a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111ab82610ed6565b91506111b683610ed6565b92508282019050808211156111ce576111cd611174565b5b9291505056fea264697066735822122006fee5beee7ed010685e8821f1f9c572837eb2d3dc19ccb5389d66889565afe764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18E5 CODESIZE SUB DUP1 PUSH2 0x18E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xDA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST POP DUP2 PUSH1 0x5 SWAP1 DUP2 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST POP POP POP POP PUSH2 0x6CE JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FA DUP3 PUSH2 0x1B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x1C4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22B PUSH2 0x19B JUMP JUMPDEST SWAP1 POP PUSH2 0x237 DUP3 DUP3 PUSH2 0x1F1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x256 JUMPI PUSH2 0x255 PUSH2 0x1C4 JUMP JUMPDEST JUMPDEST PUSH2 0x25F DUP3 PUSH2 0x1B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28C PUSH2 0x287 DUP5 PUSH2 0x23C JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x1B0 JUMP JUMPDEST JUMPDEST PUSH2 0x2B3 DUP5 DUP3 DUP6 PUSH2 0x26C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CF JUMPI PUSH2 0x2CE PUSH2 0x1AC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x311 DUP3 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x307 JUMP JUMPDEST DUP2 EQ PUSH2 0x32B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x33C DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH2 0x358 PUSH2 0x1A4 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x375 PUSH2 0x1A8 JUMP JUMPDEST JUMPDEST PUSH2 0x382 DUP7 DUP3 DUP8 ADD PUSH2 0x2BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x1A8 JUMP JUMPDEST JUMPDEST PUSH2 0x3AF DUP7 DUP3 DUP8 ADD PUSH2 0x2BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3C0 DUP7 DUP3 DUP8 ADD PUSH2 0x32E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3D3 DUP2 PUSH2 0x307 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH0 DUP4 ADD DUP5 PUSH2 0x3CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x440 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x453 JUMPI PUSH2 0x452 PUSH2 0x3FC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4B5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x47A JUMP JUMPDEST PUSH2 0x4BF DUP7 DUP4 PUSH2 0x47A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x503 PUSH2 0x4FE PUSH2 0x4F9 DUP5 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x51C DUP4 PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x530 PUSH2 0x528 DUP3 PUSH2 0x50A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x486 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x544 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x54F DUP2 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH2 0x567 PUSH0 DUP3 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x555 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x588 DUP2 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x591 DUP5 PUSH2 0x46B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5A0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5B4 PUSH2 0x5AC DUP6 PUSH2 0x46B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x554 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5D7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5BC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5EF DUP4 DUP4 PUSH2 0x5C8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x608 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x621 JUMPI PUSH2 0x620 PUSH2 0x1C4 JUMP JUMPDEST JUMPDEST PUSH2 0x62B DUP3 SLOAD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x636 DUP3 DUP3 DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x667 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x655 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x65F DUP6 DUP3 PUSH2 0x5E4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x675 DUP7 PUSH2 0x459 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x69C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x677 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6B9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6B5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5C8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x120A DUP1 PUSH2 0x6DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36A PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x395 PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x83E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x432 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x43B PUSH0 PUSH2 0x93C JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FE PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x50B DUP2 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x610 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP2 PUSH2 0x93C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x630 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x640 DUP5 DUP5 PUSH2 0x516 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x737 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP4 DUP4 DUP4 PUSH2 0xBCC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0x61C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DD PUSH2 0x43D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83C JUMPI PUSH2 0x800 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B9 PUSH0 DUP4 DUP4 PUSH2 0xBCC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x938 DUP3 PUSH0 DUP4 PUSH2 0xBCC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA64 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBC6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC10 SWAP2 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCEC JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCA6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD33 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD7E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE2A DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE34 DUP2 DUP6 PUSH2 0xDF2 JUMP JUMPDEST SWAP4 POP PUSH2 0xE44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0xE10 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE70 DUP2 DUP5 PUSH2 0xE20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEA5 DUP3 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB5 DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP2 EQ PUSH2 0xEBF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xED0 DUP2 PUSH2 0xEAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE8 DUP2 PUSH2 0xED6 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF03 DUP2 PUSH2 0xEDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2C DUP6 DUP3 DUP7 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3D DUP6 DUP3 DUP7 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0xF47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF74 PUSH0 DUP4 ADD DUP5 PUSH2 0xF52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xED6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9C PUSH0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC6 DUP7 DUP3 DUP8 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFD7 DUP7 DUP3 DUP8 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFE8 DUP7 DUP3 DUP8 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0xFF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1020 PUSH0 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH2 0x103A PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1048 DUP5 DUP3 DUP6 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1073 DUP5 DUP3 DUP6 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1085 DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109E PUSH0 DUP4 ADD DUP5 PUSH2 0x107C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C7 DUP6 DUP3 DUP7 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D8 DUP6 DUP3 DUP7 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1126 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0x10E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1152 PUSH0 DUP4 ADD DUP7 PUSH2 0x107C JUMP JUMPDEST PUSH2 0x115F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x116C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11AB DUP3 PUSH2 0xED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B6 DUP4 PUSH2 0xED6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CD PUSH2 0x1174 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD INVALID 0xE5 0xBE 0xEE PUSH31 0xD010685E8821F1F9C572837EB2D3DC19CCB5389D66889565AFE764736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "592:4404:0:-:0;;;885:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;964:5;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;989:5:0::1;981;:13;;;;;;:::i;:::-;;1014:7;1004;:17;;;;;;:::i;:::-;;885:143:::0;;;592:4404;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3401:1;3390:9;3386:17;3380:24;3431:18;3423:6;3420:30;3417:117;;;3453:79;;:::i;:::-;3417:117;3558:74;3624:7;3615:6;3604:9;3600:22;3558:74;:::i;:::-;3548:84;;3351:291;3702:2;3691:9;3687:18;3681:25;3733:18;3725:6;3722:30;3719:117;;;3755:79;;:::i;:::-;3719:117;3860:74;3926:7;3917:6;3906:9;3902:22;3860:74;:::i;:::-;3850:84;;3652:292;3983:2;4009:64;4065:7;4056:6;4045:9;4041:22;4009:64;:::i;:::-;3999:74;;3954:129;3081:1009;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:99::-;4500:6;4534:5;4528:12;4518:22;;4448:99;;;:::o;4553:180::-;4601:77;4598:1;4591:88;4698:4;4695:1;4688:15;4722:4;4719:1;4712:15;4739:320;4783:6;4820:1;4814:4;4810:12;4800:22;;4867:1;4861:4;4857:12;4888:18;4878:81;;4944:4;4936:6;4932:17;4922:27;;4878:81;5006:2;4998:6;4995:14;4975:18;4972:38;4969:84;;5025:18;;:::i;:::-;4969:84;4790:269;4739:320;;;:::o;5065:141::-;5114:4;5137:3;5129:11;;5160:3;5157:1;5150:14;5194:4;5191:1;5181:18;5173:26;;5065:141;;;:::o;5212:93::-;5249:6;5296:2;5291;5284:5;5280:14;5276:23;5266:33;;5212:93;;;:::o;5311:107::-;5355:8;5405:5;5399:4;5395:16;5374:37;;5311:107;;;;:::o;5424:393::-;5493:6;5543:1;5531:10;5527:18;5566:97;5596:66;5585:9;5566:97;:::i;:::-;5684:39;5714:8;5703:9;5684:39;:::i;:::-;5672:51;;5756:4;5752:9;5745:5;5741:21;5732:30;;5805:4;5795:8;5791:19;5784:5;5781:30;5771:40;;5500:317;;5424:393;;;;;:::o;5823:77::-;5860:7;5889:5;5878:16;;5823:77;;;:::o;5906:60::-;5934:3;5955:5;5948:12;;5906:60;;;:::o;5972:142::-;6022:9;6055:53;6073:34;6082:24;6100:5;6082:24;:::i;:::-;6073:34;:::i;:::-;6055:53;:::i;:::-;6042:66;;5972:142;;;:::o;6120:75::-;6163:3;6184:5;6177:12;;6120:75;;;:::o;6201:269::-;6311:39;6342:7;6311:39;:::i;:::-;6372:91;6421:41;6445:16;6421:41;:::i;:::-;6413:6;6406:4;6400:11;6372:91;:::i;:::-;6366:4;6359:105;6277:193;6201:269;;;:::o;6476:73::-;6521:3;6476:73;:::o;6555:189::-;6632:32;;:::i;:::-;6673:65;6731:6;6723;6717:4;6673:65;:::i;:::-;6608:136;6555:189;;:::o;6750:186::-;6810:120;6827:3;6820:5;6817:14;6810:120;;;6881:39;6918:1;6911:5;6881:39;:::i;:::-;6854:1;6847:5;6843:13;6834:22;;6810:120;;;6750:186;;:::o;6942:543::-;7043:2;7038:3;7035:11;7032:446;;;7077:38;7109:5;7077:38;:::i;:::-;7161:29;7179:10;7161:29;:::i;:::-;7151:8;7147:44;7344:2;7332:10;7329:18;7326:49;;;7365:8;7350:23;;7326:49;7388:80;7444:22;7462:3;7444:22;:::i;:::-;7434:8;7430:37;7417:11;7388:80;:::i;:::-;7047:431;;7032:446;6942:543;;;:::o;7491:117::-;7545:8;7595:5;7589:4;7585:16;7564:37;;7491:117;;;;:::o;7614:169::-;7658:6;7691:51;7739:1;7735:6;7727:5;7724:1;7720:13;7691:51;:::i;:::-;7687:56;7772:4;7766;7762:15;7752:25;;7665:118;7614:169;;;;:::o;7788:295::-;7864:4;8010:29;8035:3;8029:4;8010:29;:::i;:::-;8002:37;;8072:3;8069:1;8065:11;8059:4;8056:21;8048:29;;7788:295;;;;:::o;8088:1395::-;8205:37;8238:3;8205:37;:::i;:::-;8307:18;8299:6;8296:30;8293:56;;;8329:18;;:::i;:::-;8293:56;8373:38;8405:4;8399:11;8373:38;:::i;:::-;8458:67;8518:6;8510;8504:4;8458:67;:::i;:::-;8552:1;8576:4;8563:17;;8608:2;8600:6;8597:14;8625:1;8620:618;;;;9282:1;9299:6;9296:77;;;9348:9;9343:3;9339:19;9333:26;9324:35;;9296:77;9399:67;9459:6;9452:5;9399:67;:::i;:::-;9393:4;9386:81;9255:222;8590:887;;8620:618;8672:4;8668:9;8660:6;8656:22;8706:37;8738:4;8706:37;:::i;:::-;8765:1;8779:208;8793:7;8790:1;8787:14;8779:208;;;8872:9;8867:3;8863:19;8857:26;8849:6;8842:42;8923:1;8915:6;8911:14;8901:24;;8970:2;8959:9;8955:18;8942:31;;8816:4;8813:1;8809:12;8804:17;;8779:208;;;9015:6;9006:7;9003:19;9000:179;;;9073:9;9068:3;9064:19;9058:26;9116:48;9158:4;9150:6;9146:17;9135:9;9116:48;:::i;:::-;9108:6;9101:64;9023:156;9000:179;9225:1;9221;9213:6;9209:14;9205:22;9199:4;9192:36;8627:611;;;8590:887;;8180:1303;;;8088:1395;;:::o;592:4404:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_392": {
									"entryPoint": 1571,
									"id": 392,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_451": {
									"entryPoint": 2557,
									"id": 451,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_375": {
									"entryPoint": 2237,
									"id": 375,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_611": {
									"entryPoint": 1975,
									"id": 611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_343": {
									"entryPoint": 2110,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_927": {
									"entryPoint": 1564,
									"id": 927,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_498": {
									"entryPoint": 1589,
									"id": 498,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_673": {
									"entryPoint": 2364,
									"id": 673,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_235": {
									"entryPoint": 1735,
									"id": 235,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_311": {
									"entryPoint": 3020,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_135": {
									"entryPoint": 1302,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_158": {
									"entryPoint": 864,
									"id": 158,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_96": {
									"entryPoint": 996,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_525": {
									"entryPoint": 983,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_76": {
									"entryPoint": 953,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_513": {
									"entryPoint": 961,
									"id": 513,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_60": {
									"entryPoint": 720,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_594": {
									"entryPoint": 1085,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_625": {
									"entryPoint": 1066,
									"id": 625,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_68": {
									"entryPoint": 1124,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": 898,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_189": {
									"entryPoint": 907,
									"id": 189,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_653": {
									"entryPoint": 1432,
									"id": 653,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_119": {
									"entryPoint": 1268,
									"id": 119,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4415,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:6",
										"nodeType": "YulBlock",
										"src": "0:7588:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5147:263:6",
													"nodeType": "YulBlock",
													"src": "5147:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:6",
																"nodeType": "YulBlock",
																"src": "5193:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:6"
																			},
																			"nativeSrc": "5195:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:6"
																		},
																		"nativeSrc": "5195:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:6"
																		},
																		"nativeSrc": "5164:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:6"
																},
																"nativeSrc": "5160:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:6"
															},
															"nativeSrc": "5157:119:6",
															"nodeType": "YulIf",
															"src": "5157:119:6"
														},
														{
															"nativeSrc": "5286:117:6",
															"nodeType": "YulBlock",
															"src": "5286:117:6",
															"statements": [
																{
																	"nativeSrc": "5301:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:6"
																				},
																				"nativeSrc": "5361:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:6"
																		},
																		"nativeSrc": "5340:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:6",
														"nodeType": "YulTypedName",
														"src": "5117:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:6",
														"nodeType": "YulTypedName",
														"src": "5128:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:6",
														"nodeType": "YulTypedName",
														"src": "5140:6:6",
														"type": ""
													}
												],
												"src": "5081:329:6"
											},
											{
												"body": {
													"nativeSrc": "5481:53:6",
													"nodeType": "YulBlock",
													"src": "5481:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:6"
																		},
																		"nativeSrc": "5503:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:6"
																},
																"nativeSrc": "5491:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:6"
															},
															"nativeSrc": "5491:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:6",
														"nodeType": "YulTypedName",
														"src": "5469:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:6",
														"nodeType": "YulTypedName",
														"src": "5476:3:6",
														"type": ""
													}
												],
												"src": "5416:118:6"
											},
											{
												"body": {
													"nativeSrc": "5638:124:6",
													"nodeType": "YulBlock",
													"src": "5638:124:6",
													"statements": [
														{
															"nativeSrc": "5648:26:6",
															"nodeType": "YulAssignment",
															"src": "5648:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:6"
																},
																"nativeSrc": "5656:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:6"
																		},
																		"nativeSrc": "5737:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:6"
																},
																"nativeSrc": "5684:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:6"
															},
															"nativeSrc": "5684:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:6",
														"nodeType": "YulTypedName",
														"src": "5610:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:6",
														"nodeType": "YulTypedName",
														"src": "5622:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:6",
														"nodeType": "YulTypedName",
														"src": "5633:4:6",
														"type": ""
													}
												],
												"src": "5540:222:6"
											},
											{
												"body": {
													"nativeSrc": "5851:391:6",
													"nodeType": "YulBlock",
													"src": "5851:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:6",
																"nodeType": "YulBlock",
																"src": "5897:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:6"
																			},
																			"nativeSrc": "5899:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:6"
																		},
																		"nativeSrc": "5899:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:6"
																		},
																		"nativeSrc": "5868:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:6"
																},
																"nativeSrc": "5864:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:6"
															},
															"nativeSrc": "5861:119:6",
															"nodeType": "YulIf",
															"src": "5861:119:6"
														},
														{
															"nativeSrc": "5990:117:6",
															"nodeType": "YulBlock",
															"src": "5990:117:6",
															"statements": [
																{
																	"nativeSrc": "6005:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:6"
																				},
																				"nativeSrc": "6065:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:6"
																		},
																		"nativeSrc": "6044:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:6",
															"nodeType": "YulBlock",
															"src": "6117:118:6",
															"statements": [
																{
																	"nativeSrc": "6132:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:6"
																				},
																				"nativeSrc": "6193:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:6"
																		},
																		"nativeSrc": "6172:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:6",
														"nodeType": "YulTypedName",
														"src": "5813:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:6",
														"nodeType": "YulTypedName",
														"src": "5824:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:6",
														"nodeType": "YulTypedName",
														"src": "5836:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:6",
														"nodeType": "YulTypedName",
														"src": "5844:6:6",
														"type": ""
													}
												],
												"src": "5768:474:6"
											},
											{
												"body": {
													"nativeSrc": "6276:152:6",
													"nodeType": "YulBlock",
													"src": "6276:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:6"
																},
																"nativeSrc": "6286:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:6"
															},
															"nativeSrc": "6286:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:6"
																},
																"nativeSrc": "6383:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:6"
															},
															"nativeSrc": "6383:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:6"
																},
																"nativeSrc": "6407:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:6"
															},
															"nativeSrc": "6407:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:6"
											},
											{
												"body": {
													"nativeSrc": "6485:269:6",
													"nodeType": "YulBlock",
													"src": "6485:269:6",
													"statements": [
														{
															"nativeSrc": "6495:22:6",
															"nodeType": "YulAssignment",
															"src": "6495:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:6"
																},
																"nativeSrc": "6505:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:6"
																}
															]
														},
														{
															"nativeSrc": "6526:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:6"
																},
																"nativeSrc": "6552:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:6",
																"nodeType": "YulBlock",
																"src": "6603:51:6",
																"statements": [
																	{
																		"nativeSrc": "6617:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:6"
																			},
																			"nativeSrc": "6627:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:6"
																},
																"nativeSrc": "6576:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:6"
															},
															"nativeSrc": "6573:81:6",
															"nodeType": "YulIf",
															"src": "6573:81:6"
														},
														{
															"body": {
																"nativeSrc": "6706:42:6",
																"nodeType": "YulBlock",
																"src": "6706:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:6"
																			},
																			"nativeSrc": "6720:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:6"
																		},
																		"nativeSrc": "6720:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:6"
																		},
																		"nativeSrc": "6690:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:6"
																},
																"nativeSrc": "6667:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:6"
															},
															"nativeSrc": "6664:84:6",
															"nodeType": "YulIf",
															"src": "6664:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:6",
														"nodeType": "YulTypedName",
														"src": "6469:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:6",
														"nodeType": "YulTypedName",
														"src": "6478:6:6",
														"type": ""
													}
												],
												"src": "6434:320:6"
											},
											{
												"body": {
													"nativeSrc": "6914:288:6",
													"nodeType": "YulBlock",
													"src": "6914:288:6",
													"statements": [
														{
															"nativeSrc": "6924:26:6",
															"nodeType": "YulAssignment",
															"src": "6924:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6936:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6932:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:6"
																},
																"nativeSrc": "6932:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6932:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6924:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6924:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7004:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7004:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7017:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7028:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7028:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7013:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:6"
																		},
																		"nativeSrc": "7013:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6960:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6960:43:6"
																},
																"nativeSrc": "6960:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6960:71:6"
															},
															"nativeSrc": "6960:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6960:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7085:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:6"
																		},
																		"nativeSrc": "7094:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7041:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7041:43:6"
																},
																"nativeSrc": "7041:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7041:72:6"
															},
															"nativeSrc": "7041:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7041:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7167:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7167:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7180:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7180:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7191:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7176:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:6"
																		},
																		"nativeSrc": "7176:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7123:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7123:43:6"
																},
																"nativeSrc": "7123:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7123:72:6"
															},
															"nativeSrc": "7123:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7123:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6760:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6870:9:6",
														"nodeType": "YulTypedName",
														"src": "6870:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6882:6:6",
														"nodeType": "YulTypedName",
														"src": "6882:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6890:6:6",
														"nodeType": "YulTypedName",
														"src": "6890:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6898:6:6",
														"nodeType": "YulTypedName",
														"src": "6898:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6909:4:6",
														"nodeType": "YulTypedName",
														"src": "6909:4:6",
														"type": ""
													}
												],
												"src": "6760:442:6"
											},
											{
												"body": {
													"nativeSrc": "7236:152:6",
													"nodeType": "YulBlock",
													"src": "7236:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:6"
																},
																"nativeSrc": "7246:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:6"
															},
															"nativeSrc": "7246:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:6"
																},
																"nativeSrc": "7343:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:6"
															},
															"nativeSrc": "7343:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:6"
																},
																"nativeSrc": "7367:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:6"
															},
															"nativeSrc": "7367:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:6"
											},
											{
												"body": {
													"nativeSrc": "7438:147:6",
													"nodeType": "YulBlock",
													"src": "7438:147:6",
													"statements": [
														{
															"nativeSrc": "7448:25:6",
															"nodeType": "YulAssignment",
															"src": "7448:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:6"
																},
																"nativeSrc": "7453:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:6"
																}
															]
														},
														{
															"nativeSrc": "7482:25:6",
															"nodeType": "YulAssignment",
															"src": "7482:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:6"
																},
																"nativeSrc": "7487:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:6"
																}
															]
														},
														{
															"nativeSrc": "7516:16:6",
															"nodeType": "YulAssignment",
															"src": "7516:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:6"
																},
																"nativeSrc": "7523:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:6",
																"nodeType": "YulBlock",
																"src": "7556:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:6"
																			},
																			"nativeSrc": "7558:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:6"
																		},
																		"nativeSrc": "7558:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:6"
																},
																"nativeSrc": "7545:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:6"
															},
															"nativeSrc": "7542:36:6",
															"nodeType": "YulIf",
															"src": "7542:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:6",
														"nodeType": "YulTypedName",
														"src": "7425:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:6",
														"nodeType": "YulTypedName",
														"src": "7428:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:6",
														"nodeType": "YulTypedName",
														"src": "7434:3:6",
														"type": ""
													}
												],
												"src": "7394:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610e58565b60405180910390f35b610124600480360381019061011f9190610f09565b610360565b6040516101319190610f61565b60405180910390f35b610142610382565b60405161014f9190610f89565b60405180910390f35b610172600480360381019061016d9190610fa2565b61038b565b60405161017f9190610f61565b60405180910390f35b6101906103b9565b60405161019d919061100d565b60405180910390f35b6101c060048036038101906101bb9190610f09565b6103c1565b005b6101dc60048036038101906101d79190611026565b6103d7565b005b6101f860048036038101906101f39190611051565b6103e4565b6040516102059190610f89565b60405180910390f35b61021661042a565b005b61022061043d565b60405161022d919061108b565b60405180910390f35b61023e610464565b60405161024b9190610e58565b60405180910390f35b61026e60048036038101906102699190610f09565b6104f4565b60405161027b9190610f61565b60405180910390f35b61029e600480360381019061029991906110a4565b610516565b6040516102ab9190610f89565b60405180910390f35b6102ce60048036038101906102c99190611051565b610598565b005b6060600480546102df9061110f565b80601f016020809104026020016040519081016040528092919081815260200182805461030b9061110f565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a61061c565b9050610377818585610623565b600191505092915050565b5f600354905090565b5f8061039561061c565b90506103a2858285610635565b6103ad8585856106c7565b60019150509392505050565b5f6012905090565b6103c96107b7565b6103d3828261083e565b5050565b6103e133826108bd565b50565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104326107b7565b61043b5f61093c565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546104739061110f565b80601f016020809104026020016040519081016040528092919081815260200182805461049f9061110f565b80156104ea5780601f106104c1576101008083540402835291602001916104ea565b820191905f5260205f20905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b5f806104fe61061c565b905061050b8185856106c7565b600191505092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6105a06107b7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610610575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610607919061108b565b60405180910390fd5b6106198161093c565b50565b5f33905090565b61063083838360016109fd565b505050565b5f6106408484610516565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106c157818110156106b2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106a99392919061113f565b60405180910390fd5b6106c084848484035f6109fd565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610737575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161072e919061108b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a7575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161079e919061108b565b60405180910390fd5b6107b2838383610bcc565b505050565b6107bf61061c565b73ffffffffffffffffffffffffffffffffffffffff166107dd61043d565b73ffffffffffffffffffffffffffffffffffffffff161461083c5761080061061c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610833919061108b565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108a5919061108b565b60405180910390fd5b6108b95f8383610bcc565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610924919061108b565b60405180910390fd5b610938825f83610bcc565b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a6d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a64919061108b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610add575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ad4919061108b565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bc6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bbd9190610f89565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1c578060035f828254610c1091906111a1565b92505081905550610cec565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ca6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c9d9392919061113f565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d33578060035f8282540392505081905550610d7e565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ddb9190610f89565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610e2a82610de8565b610e348185610df2565b9350610e44818560208601610e02565b610e4d81610e10565b840191505092915050565b5f6020820190508181035f830152610e708184610e20565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ea582610e7c565b9050919050565b610eb581610e9b565b8114610ebf575f80fd5b50565b5f81359050610ed081610eac565b92915050565b5f819050919050565b610ee881610ed6565b8114610ef2575f80fd5b50565b5f81359050610f0381610edf565b92915050565b5f8060408385031215610f1f57610f1e610e78565b5b5f610f2c85828601610ec2565b9250506020610f3d85828601610ef5565b9150509250929050565b5f8115159050919050565b610f5b81610f47565b82525050565b5f602082019050610f745f830184610f52565b92915050565b610f8381610ed6565b82525050565b5f602082019050610f9c5f830184610f7a565b92915050565b5f805f60608486031215610fb957610fb8610e78565b5b5f610fc686828701610ec2565b9350506020610fd786828701610ec2565b9250506040610fe886828701610ef5565b9150509250925092565b5f60ff82169050919050565b61100781610ff2565b82525050565b5f6020820190506110205f830184610ffe565b92915050565b5f6020828403121561103b5761103a610e78565b5b5f61104884828501610ef5565b91505092915050565b5f6020828403121561106657611065610e78565b5b5f61107384828501610ec2565b91505092915050565b61108581610e9b565b82525050565b5f60208201905061109e5f83018461107c565b92915050565b5f80604083850312156110ba576110b9610e78565b5b5f6110c785828601610ec2565b92505060206110d885828601610ec2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061112657607f821691505b602082108103611139576111386110e2565b5b50919050565b5f6060820190506111525f83018661107c565b61115f6020830185610f7a565b61116c6040830184610f7a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111ab82610ed6565b91506111b683610ed6565b92508282019050808211156111ce576111cd611174565b5b9291505056fea264697066735822122006fee5beee7ed010685e8821f1f9c572837eb2d3dc19ccb5389d66889565afe764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36A PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x395 PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x83E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0x8BD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x432 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x43B PUSH0 PUSH2 0x93C JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x473 SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x110F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FE PUSH2 0x61C JUMP JUMPDEST SWAP1 POP PUSH2 0x50B DUP2 DUP6 DUP6 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x610 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP2 PUSH2 0x93C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x630 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x640 DUP5 DUP5 PUSH2 0x516 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6C1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9FD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x737 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP4 DUP4 DUP4 PUSH2 0xBCC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0x61C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DD PUSH2 0x43D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83C JUMPI PUSH2 0x800 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B9 PUSH0 DUP4 DUP4 PUSH2 0xBCC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x938 DUP3 PUSH0 DUP4 PUSH2 0xBCC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA64 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBC6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1C JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC10 SWAP2 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCEC JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCA6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD33 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD7E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE2A DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE34 DUP2 DUP6 PUSH2 0xDF2 JUMP JUMPDEST SWAP4 POP PUSH2 0xE44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0xE10 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE70 DUP2 DUP5 PUSH2 0xE20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEA5 DUP3 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB5 DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP2 EQ PUSH2 0xEBF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xED0 DUP2 PUSH2 0xEAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE8 DUP2 PUSH2 0xED6 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF03 DUP2 PUSH2 0xEDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2C DUP6 DUP3 DUP7 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3D DUP6 DUP3 DUP7 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0xF47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF74 PUSH0 DUP4 ADD DUP5 PUSH2 0xF52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF83 DUP2 PUSH2 0xED6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9C PUSH0 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC6 DUP7 DUP3 DUP8 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFD7 DUP7 DUP3 DUP8 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFE8 DUP7 DUP3 DUP8 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0xFF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1020 PUSH0 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH2 0x103A PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1048 DUP5 DUP3 DUP6 ADD PUSH2 0xEF5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1073 DUP5 DUP3 DUP6 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1085 DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109E PUSH0 DUP4 ADD DUP5 PUSH2 0x107C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0xE78 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C7 DUP6 DUP3 DUP7 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10D8 DUP6 DUP3 DUP7 ADD PUSH2 0xEC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1126 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1139 JUMPI PUSH2 0x1138 PUSH2 0x10E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1152 PUSH0 DUP4 ADD DUP7 PUSH2 0x107C JUMP JUMPDEST PUSH2 0x115F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x116C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11AB DUP3 PUSH2 0xED6 JUMP JUMPDEST SWAP2 POP PUSH2 0x11B6 DUP4 PUSH2 0xED6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CD PUSH2 0x1174 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD INVALID 0xE5 0xBE 0xEE PUSH31 0xD010685E8821F1F9C572837EB2D3DC19CCB5389D66889565AFE764736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "592:4404:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1871:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1316:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2063:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1228:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4812:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4913:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1419:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1129:93:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1541:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1725:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1034:89:0;1079:13;1111:5;1104:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:89;:::o;1871:186::-;1944:4;1960:13;1976:12;:10;:12::i;:::-;1960:28;;1998:31;2007:5;2014:7;2023:5;1998:8;:31::i;:::-;2046:4;2039:11;;;1871:186;;;;:::o;1316:97::-;1368:7;1394:12;;1387:19;;1316:97;:::o;2063:244::-;2150:4;2166:15;2184:12;:10;:12::i;:::-;2166:30;;2206:37;2222:4;2228:7;2237:5;2206:15;:37::i;:::-;2253:26;2263:4;2269:2;2273:5;2253:9;:26::i;:::-;2296:4;2289:11;;;2063:244;;;;;:::o;1228:82::-;1277:5;1301:2;1294:9;;1228:82;:::o;4812:95::-;1531:13:1;:11;:13::i;:::-;4883:17:0::1;4889:2;4893:6;4883:5;:17::i;:::-;4812:95:::0;;:::o;4913:81::-;4962:25;4968:10;4980:6;4962:5;:25::i;:::-;4913:81;:::o;1419:116::-;1484:7;1510:9;:18;1520:7;1510:18;;;;;;;;;;;;;;;;1503:25;;1419:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1129:93:0:-;1176:13;1208:7;1201:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:93;:::o;1541:178::-;1610:4;1626:13;1642:12;:10;:12::i;:::-;1626:28;;1664:27;1674:5;1681:2;1685:5;1664:9;:27::i;:::-;1708:4;1701:11;;;1541:178;;;;:::o;1725:140::-;1805:7;1831:11;:18;1843:5;1831:18;;;;;;;;;;;;;;;:27;1850:7;1831:27;;;;;;;;;;;;;;;;1824:34;;1725:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;3757:128:0:-;3841:37;3850:5;3857:7;3866:5;3873:4;3841:8;:37::i;:::-;3757:128;;;:::o;4329:477::-;4428:24;4455:25;4465:5;4472:7;4455:9;:25::i;:::-;4428:52;;4514:17;4494:16;:37;4490:310;;4570:5;4551:16;:24;4547:130;;;4629:7;4638:16;4656:5;4602:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;4547:130;4718:57;4727:5;4734:7;4762:5;4743:16;:24;4769:5;4718:8;:57::i;:::-;4490:310;4418:388;4329:477;;;:::o;2313:300::-;2412:1;2396:18;;:4;:18;;;2392:86;;2464:1;2437:30;;;;;;;;;;;:::i;:::-;;;;;;;;2392:86;2505:1;2491:16;;:2;:16;;;2487:86;;2559:1;2530:32;;;;;;;;;;;:::i;:::-;;;;;;;;2487:86;2582:24;2590:4;2596:2;2600:5;2582:7;:24::i;:::-;2313:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;3331:208:0:-;3420:1;3401:21;;:7;:21;;;3397:91;;3474:1;3445:32;;;;;;;;;;;:::i;:::-;;;;;;;;3397:91;3497:35;3513:1;3517:7;3526:5;3497:7;:35::i;:::-;3331:208;;:::o;3545:206::-;3634:1;3615:21;;:7;:21;;;3611:89;;3686:1;3659:30;;;;;;;;;;;:::i;:::-;;;;;;;;3611:89;3709:35;3717:7;3734:1;3738:5;3709:7;:35::i;:::-;3545:206;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3891:432:0:-;4020:1;4003:19;;:5;:19;;;3999:89;;4074:1;4045:32;;;;;;;;;;;:::i;:::-;;;;;;;;3999:89;4120:1;4101:21;;:7;:21;;;4097:90;;4173:1;4145:31;;;;;;;;;;;:::i;:::-;;;;;;;;4097:90;4226:5;4196:11;:18;4208:5;4196:18;;;;;;;;;;;;;;;:27;4215:7;4196:27;;;;;;;;;;;;;;;:35;;;;4245:9;4241:76;;;4291:7;4275:31;;4284:5;4275:31;;;4300:5;4275:31;;;;;;:::i;:::-;;;;;;;;4241:76;3891:432;;;;:::o;2619:706::-;2724:1;2708:18;;:4;:18;;;2704:359;;2758:5;2742:12;;:21;;;;;;;:::i;:::-;;;;;;;;2704:359;;;2794:19;2816:9;:15;2826:4;2816:15;;;;;;;;;;;;;;;;2794:37;;2863:5;2849:11;:19;2845:115;;;2920:4;2926:11;2939:5;2895:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;2845:115;3033:5;3019:11;:19;3001:9;:15;3011:4;3001:15;;;;;;;;;;;;;;;:37;;;;2780:283;2704:359;3091:1;3077:16;;:2;:16;;;3073:205;;3153:5;3137:12;;:21;;;;;;;;;;;3073:205;;;3248:5;3231:9;:13;3241:2;3231:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;3073:205;3308:2;3293:25;;3302:4;3293:25;;;3312:5;3293:25;;;;;;:::i;:::-;;;;;;;;2619:706;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:442::-;6909:4;6947:2;6936:9;6932:18;6924:26;;6960:71;7028:1;7017:9;7013:17;7004:6;6960:71;:::i;:::-;7041:72;7109:2;7098:9;7094:18;7085:6;7041:72;:::i;:::-;7123;7191:2;7180:9;7176:18;7167:6;7123:72;:::i;:::-;6760:442;;;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "923600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"decimals()": "383",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_approve(address,address,uint256,bool)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 885,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 964,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 989,
									"end": 994,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 981,
									"end": 986,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 981,
									"end": 994,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 981,
									"end": 994,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1014,
									"end": 1021,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1011,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1004,
									"end": 1021,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1004,
									"end": 1021,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 1028,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3401,
									"end": 3402,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3386,
									"end": 3403,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3380,
									"end": 3404,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3431,
									"end": 3449,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3420,
									"end": 3450,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3453,
									"end": 3532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3624,
									"end": 3631,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3615,
									"end": 3621,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3558,
									"end": 3632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3351,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3691,
									"end": 3700,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3687,
									"end": 3705,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3706,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3733,
									"end": 3751,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3731,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3752,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3755,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3926,
									"end": 3933,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3902,
									"end": 3924,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3860,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4009,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3954,
									"end": 4083,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4096,
									"end": 4214,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4096,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4183,
									"end": 4207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4201,
									"end": 4206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4183,
									"end": 4207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4183,
									"end": 4207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4183,
									"end": 4207,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4183,
									"end": 4207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4181,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4171,
									"end": 4208,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4096,
									"end": 4214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4096,
									"end": 4214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4096,
									"end": 4214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4442,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4220,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4351,
									"end": 4353,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4340,
									"end": 4349,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4354,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4328,
									"end": 4354,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4328,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 4432,
									"end": 4433,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4421,
									"end": 4430,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4434,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4408,
									"end": 4414,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4435,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4364,
									"end": 4435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4435,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 4364,
									"end": 4435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4442,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4442,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4442,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4442,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4220,
									"end": 4442,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4448,
									"end": 4547,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4448,
									"end": 4547,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4506,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4534,
									"end": 4539,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4528,
									"end": 4540,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4518,
									"end": 4540,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4518,
									"end": 4540,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4448,
									"end": 4547,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4448,
									"end": 4547,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4448,
									"end": 4547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4448,
									"end": 4547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4553,
									"end": 4733,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4553,
									"end": 4733,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4601,
									"end": 4678,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4598,
									"end": 4599,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4591,
									"end": 4679,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4698,
									"end": 4702,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4695,
									"end": 4696,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4688,
									"end": 4703,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4722,
									"end": 4726,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4719,
									"end": 4720,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4712,
									"end": 4727,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 5059,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4739,
									"end": 5059,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4789,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4814,
									"end": 4818,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4810,
									"end": 4822,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4800,
									"end": 4822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4800,
									"end": 4822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4868,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4861,
									"end": 4865,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4857,
									"end": 4869,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4888,
									"end": 4906,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4878,
									"end": 4959,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 4878,
									"end": 4959,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4936,
									"end": 4942,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4932,
									"end": 4949,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4922,
									"end": 4949,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4922,
									"end": 4949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4878,
									"end": 4959,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 4878,
									"end": 4959,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5006,
									"end": 5008,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4998,
									"end": 5004,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4995,
									"end": 5009,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4975,
									"end": 4993,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4972,
									"end": 5010,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4969,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 4969,
									"end": 5053,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5025,
									"end": 5043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5025,
									"end": 5043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5025,
									"end": 5043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5025,
									"end": 5043,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5025,
									"end": 5043,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4969,
									"end": 5053,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 4969,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4790,
									"end": 5059,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 5059,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 5059,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 5059,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 5059,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5206,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5065,
									"end": 5206,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5114,
									"end": 5118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5137,
									"end": 5140,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5129,
									"end": 5140,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5129,
									"end": 5140,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5160,
									"end": 5163,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5157,
									"end": 5158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5150,
									"end": 5164,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5194,
									"end": 5198,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5181,
									"end": 5199,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5173,
									"end": 5199,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5173,
									"end": 5199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5206,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5206,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5065,
									"end": 5206,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5212,
									"end": 5305,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5212,
									"end": 5305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5249,
									"end": 5255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5296,
									"end": 5298,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5291,
									"end": 5293,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5284,
									"end": 5289,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5280,
									"end": 5294,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5276,
									"end": 5299,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5266,
									"end": 5299,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5266,
									"end": 5299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5212,
									"end": 5305,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5212,
									"end": 5305,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5212,
									"end": 5305,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5212,
									"end": 5305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5311,
									"end": 5418,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5311,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5355,
									"end": 5363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5405,
									"end": 5410,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5403,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5395,
									"end": 5411,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5374,
									"end": 5411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5374,
									"end": 5411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5311,
									"end": 5418,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5311,
									"end": 5418,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5311,
									"end": 5418,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5311,
									"end": 5418,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5311,
									"end": 5418,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5499,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5543,
									"end": 5544,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5531,
									"end": 5541,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5527,
									"end": 5545,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5566,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 5596,
									"end": 5662,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5585,
									"end": 5594,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5566,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5566,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5566,
									"end": 5663,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 5566,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5684,
									"end": 5723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5714,
									"end": 5722,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5703,
									"end": 5712,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5684,
									"end": 5723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5684,
									"end": 5723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5684,
									"end": 5723,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5684,
									"end": 5723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5723,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5723,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5752,
									"end": 5761,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5745,
									"end": 5750,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5741,
									"end": 5762,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5732,
									"end": 5762,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5732,
									"end": 5762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5803,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5810,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5784,
									"end": 5789,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5781,
									"end": 5811,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5771,
									"end": 5811,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5771,
									"end": 5811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5500,
									"end": 5817,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5500,
									"end": 5817,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5900,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5823,
									"end": 5900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5860,
									"end": 5867,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5889,
									"end": 5894,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5878,
									"end": 5894,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5878,
									"end": 5894,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5900,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5906,
									"end": 5966,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5906,
									"end": 5966,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5934,
									"end": 5937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5955,
									"end": 5960,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5948,
									"end": 5960,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5948,
									"end": 5960,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5906,
									"end": 5966,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5906,
									"end": 5966,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5906,
									"end": 5966,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5906,
									"end": 5966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 6114,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5972,
									"end": 6114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6022,
									"end": 6031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6055,
									"end": 6108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6073,
									"end": 6107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6082,
									"end": 6106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6100,
									"end": 6105,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 6082,
									"end": 6106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6106,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6082,
									"end": 6106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6073,
									"end": 6107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6073,
									"end": 6107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6073,
									"end": 6107,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6073,
									"end": 6107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6055,
									"end": 6108,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 6055,
									"end": 6108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6055,
									"end": 6108,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6055,
									"end": 6108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6108,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6042,
									"end": 6108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 6114,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 6114,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 6114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 6114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6195,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 6120,
									"end": 6195,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6184,
									"end": 6189,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6189,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6195,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6195,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6195,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6201,
									"end": 6470,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6201,
									"end": 6470,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6311,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6342,
									"end": 6349,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6311,
									"end": 6350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6311,
									"end": 6350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6311,
									"end": 6350,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6311,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6372,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6421,
									"end": 6462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6445,
									"end": 6461,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6421,
									"end": 6462,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 6421,
									"end": 6462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6421,
									"end": 6462,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6421,
									"end": 6462,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6413,
									"end": 6419,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6406,
									"end": 6410,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6372,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6372,
									"end": 6463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6372,
									"end": 6463,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6372,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6366,
									"end": 6370,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6464,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6277,
									"end": 6470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6201,
									"end": 6470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6201,
									"end": 6470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6201,
									"end": 6470,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6201,
									"end": 6470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6549,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6476,
									"end": 6549,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6521,
									"end": 6524,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6476,
									"end": 6549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6476,
									"end": 6549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6744,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6555,
									"end": 6744,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6632,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6632,
									"end": 6664,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6632,
									"end": 6664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6632,
									"end": 6664,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 6632,
									"end": 6664,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6738,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 6731,
									"end": 6737,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6729,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6717,
									"end": 6721,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6738,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6673,
									"end": 6738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6738,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 6673,
									"end": 6738,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6608,
									"end": 6744,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6744,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6744,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6555,
									"end": 6744,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6750,
									"end": 6936,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 6750,
									"end": 6936,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6827,
									"end": 6830,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6820,
									"end": 6825,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6817,
									"end": 6831,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6881,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 6918,
									"end": 6919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6911,
									"end": 6916,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6881,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6881,
									"end": 6920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6881,
									"end": 6920,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 6881,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6854,
									"end": 6855,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6847,
									"end": 6852,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6843,
									"end": 6856,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6834,
									"end": 6856,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6834,
									"end": 6856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 6810,
									"end": 6930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6750,
									"end": 6936,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6750,
									"end": 6936,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6750,
									"end": 6936,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 7485,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6942,
									"end": 7485,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7043,
									"end": 7045,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7038,
									"end": 7041,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7035,
									"end": 7046,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7032,
									"end": 7478,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7032,
									"end": 7478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7032,
									"end": 7478,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7077,
									"end": 7115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7109,
									"end": 7114,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7077,
									"end": 7115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 7077,
									"end": 7115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7077,
									"end": 7115,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7077,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 7190,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 7190,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7161,
									"end": 7190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 7190,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 7161,
									"end": 7190,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7151,
									"end": 7159,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7147,
									"end": 7191,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7344,
									"end": 7346,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7332,
									"end": 7342,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7329,
									"end": 7347,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7326,
									"end": 7375,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7326,
									"end": 7375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 7326,
									"end": 7375,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7365,
									"end": 7373,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7350,
									"end": 7373,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7350,
									"end": 7373,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7326,
									"end": 7375,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 7326,
									"end": 7375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7388,
									"end": 7468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 7444,
									"end": 7466,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 7462,
									"end": 7465,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7444,
									"end": 7466,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7444,
									"end": 7466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7444,
									"end": 7466,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 7444,
									"end": 7466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7434,
									"end": 7442,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7430,
									"end": 7467,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7417,
									"end": 7428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7388,
									"end": 7468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7388,
									"end": 7468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7388,
									"end": 7468,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 7388,
									"end": 7468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7047,
									"end": 7478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7047,
									"end": 7478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7032,
									"end": 7478,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7032,
									"end": 7478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 7485,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 7485,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 7485,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 7485,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7608,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 7491,
									"end": 7608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7545,
									"end": 7553,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7585,
									"end": 7601,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7564,
									"end": 7601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7564,
									"end": 7601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7608,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7608,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7491,
									"end": 7608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7658,
									"end": 7664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7691,
									"end": 7742,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 7739,
									"end": 7740,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7735,
									"end": 7741,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7727,
									"end": 7732,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7724,
									"end": 7725,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7720,
									"end": 7733,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7691,
									"end": 7742,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 7691,
									"end": 7742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7691,
									"end": 7742,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 7691,
									"end": 7742,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7687,
									"end": 7743,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7772,
									"end": 7776,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 7770,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7762,
									"end": 7777,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7752,
									"end": 7777,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7752,
									"end": 7777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7665,
									"end": 7783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7614,
									"end": 7783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7614,
									"end": 7783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7788,
									"end": 8083,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 7788,
									"end": 8083,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8010,
									"end": 8039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 8035,
									"end": 8038,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8033,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 8010,
									"end": 8039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8010,
									"end": 8039,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 8010,
									"end": 8039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8039,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8002,
									"end": 8039,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8072,
									"end": 8075,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8069,
									"end": 8070,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8065,
									"end": 8076,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8059,
									"end": 8063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8056,
									"end": 8077,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8048,
									"end": 8077,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8048,
									"end": 8077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7788,
									"end": 8083,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7788,
									"end": 8083,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7788,
									"end": 8083,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7788,
									"end": 8083,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7788,
									"end": 8083,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 9483,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 8088,
									"end": 9483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8205,
									"end": 8242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8238,
									"end": 8241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8205,
									"end": 8242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 8205,
									"end": 8242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8205,
									"end": 8242,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8205,
									"end": 8242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8307,
									"end": 8325,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8299,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8296,
									"end": 8326,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8349,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8349,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 8293,
									"end": 8349,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8329,
									"end": 8347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8329,
									"end": 8347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 8329,
									"end": 8347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8329,
									"end": 8347,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8329,
									"end": 8347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8293,
									"end": 8349,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 8293,
									"end": 8349,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8373,
									"end": 8411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8405,
									"end": 8409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8399,
									"end": 8410,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8373,
									"end": 8411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 8373,
									"end": 8411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8373,
									"end": 8411,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8373,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8458,
									"end": 8525,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8518,
									"end": 8524,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8510,
									"end": 8516,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8504,
									"end": 8508,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8458,
									"end": 8525,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 8458,
									"end": 8525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8458,
									"end": 8525,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8458,
									"end": 8525,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8552,
									"end": 8553,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8576,
									"end": 8580,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8563,
									"end": 8580,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8563,
									"end": 8580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8608,
									"end": 8610,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8597,
									"end": 8611,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8625,
									"end": 8626,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8620,
									"end": 9238,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8620,
									"end": 9238,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8620,
									"end": 9238,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 8620,
									"end": 9238,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9282,
									"end": 9283,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9299,
									"end": 9305,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9296,
									"end": 9373,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9296,
									"end": 9373,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 9296,
									"end": 9373,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9348,
									"end": 9357,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9343,
									"end": 9346,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9339,
									"end": 9358,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9333,
									"end": 9359,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9359,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9296,
									"end": 9373,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 9296,
									"end": 9373,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9399,
									"end": 9466,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 9459,
									"end": 9465,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9452,
									"end": 9457,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9399,
									"end": 9466,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 9399,
									"end": 9466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9399,
									"end": 9466,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 9399,
									"end": 9466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9393,
									"end": 9397,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9386,
									"end": 9467,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9255,
									"end": 9477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8590,
									"end": 9477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 8590,
									"end": 9477,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8620,
									"end": 9238,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 8620,
									"end": 9238,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 8676,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8668,
									"end": 8677,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8660,
									"end": 8666,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8656,
									"end": 8678,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8743,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 8706,
									"end": 8743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8743,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 8706,
									"end": 8743,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8765,
									"end": 8766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8793,
									"end": 8800,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8790,
									"end": 8791,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8787,
									"end": 8801,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8872,
									"end": 8881,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8870,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8863,
									"end": 8882,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8857,
									"end": 8883,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8849,
									"end": 8855,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8842,
									"end": 8884,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8923,
									"end": 8924,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8915,
									"end": 8921,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8911,
									"end": 8925,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8901,
									"end": 8925,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8901,
									"end": 8925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 8972,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8959,
									"end": 8968,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8955,
									"end": 8973,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8942,
									"end": 8973,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8942,
									"end": 8973,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8816,
									"end": 8820,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8813,
									"end": 8814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8809,
									"end": 8821,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8804,
									"end": 8821,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8804,
									"end": 8821,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 8779,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9015,
									"end": 9021,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9006,
									"end": 9013,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9003,
									"end": 9022,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 9000,
									"end": 9179,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9000,
									"end": 9179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 9000,
									"end": 9179,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9073,
									"end": 9082,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9068,
									"end": 9071,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9064,
									"end": 9083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9058,
									"end": 9084,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9116,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 9158,
									"end": 9162,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9150,
									"end": 9156,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9146,
									"end": 9163,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9135,
									"end": 9144,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9116,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 9116,
									"end": 9164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9116,
									"end": 9164,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 9116,
									"end": 9164,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9108,
									"end": 9114,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9101,
									"end": 9165,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9023,
									"end": 9179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9000,
									"end": 9179,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 9000,
									"end": 9179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9225,
									"end": 9226,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9221,
									"end": 9222,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9213,
									"end": 9219,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9209,
									"end": 9223,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9205,
									"end": 9227,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9199,
									"end": 9203,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9192,
									"end": 9228,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8627,
									"end": 9238,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8627,
									"end": 9238,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8627,
									"end": 9238,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8590,
									"end": 9477,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 8590,
									"end": 9477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8590,
									"end": 9477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 9483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 9483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8180,
									"end": 9483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 9483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 9483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8088,
									"end": 9483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 4996,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006fee5beee7ed010685e8821f1f9c572837eb2d3dc19ccb5389d66889565afe764736f6c63430008190033",
									".code": [
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 4996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1034,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1034,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1871,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1871,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1871,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1316,
											"end": 1413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1316,
											"end": 1413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2063,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2063,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2063,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1228,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4812,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4812,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4913,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4913,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1419,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1419,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1419,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1129,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1129,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1541,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1541,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1541,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1725,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1725,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1725,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1104,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1104,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1976,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1976,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2021,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1998,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2029,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1998,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 2057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2184,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2196,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2184,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2222,
											"end": 2226,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2242,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2206,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2243,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2206,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2263,
											"end": 2267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2253,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2253,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2300,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2289,
											"end": 2300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2063,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4889,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4899,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4883,
											"end": 4900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4883,
											"end": 4900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4812,
											"end": 4907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4968,
											"end": 4978,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4962,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4962,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1208,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1201,
											"end": 1215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1642,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1642,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1654,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1642,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1683,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1690,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1664,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1691,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1664,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1701,
											"end": 1712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1725,
											"end": 1865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3757,
											"end": 3885,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3757,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3850,
											"end": 3855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3877,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3841,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3841,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3878,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3841,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4806,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4329,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4455,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4480,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4455,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4494,
											"end": 4510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4494,
											"end": 4531,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4490,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4490,
											"end": 4800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4547,
											"end": 4677,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4629,
											"end": 4636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4656,
											"end": 4661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4602,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4602,
											"end": 4662,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4677,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4547,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4727,
											"end": 4732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4734,
											"end": 4741,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4762,
											"end": 4767,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4769,
											"end": 4774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4718,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4718,
											"end": 4775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4490,
											"end": 4800,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4490,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2313,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2392,
											"end": 2478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2437,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2392,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2491,
											"end": 2507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2491,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2487,
											"end": 2573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2530,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2573,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2487,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2582,
											"end": 2606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2582,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3539,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3331,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3401,
											"end": 3422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3401,
											"end": 3422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3397,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3397,
											"end": 3488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3474,
											"end": 3475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3445,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3397,
											"end": 3488,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3397,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3497,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3497,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3751,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3545,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3611,
											"end": 3700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3659,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3611,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3717,
											"end": 3724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3709,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3709,
											"end": 3744,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3709,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3891,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4003,
											"end": 4022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4003,
											"end": 4022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3999,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3999,
											"end": 4088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4074,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4045,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4045,
											"end": 4077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3999,
											"end": 4088,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3999,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4097,
											"end": 4187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4145,
											"end": 4176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4176,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4187,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4097,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4208,
											"end": 4213,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4223,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4231,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4241,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4291,
											"end": 4298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4289,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4275,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4306,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4317,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4241,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 3325,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2619,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2742,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2845,
											"end": 2960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 2924,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2939,
											"end": 2944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2895,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2960,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2845,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3038,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2704,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3077,
											"end": 3093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3153,
											"end": 3158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3240,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3073,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3312,
											"end": 3317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3293,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3318,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 3325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 3325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 3325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 3325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7013,
											"end": 7030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6960,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7041,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7123,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/Beef.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Beef.sol\":\"Beef\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Beef.sol\":{\"keccak256\":\"0xc55efc79529118678c8c2ad177ad7fec9f491b1b19ce0ee2a458c359a4481e9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66187eefe9cffbda495f0ebb4470d14f5f96ff5a9b5735e3fc60cc6c8343a43d\",\"dweb:/ipfs/QmbTiorHzGKzRAvqw9oPw59rJ3DSnimzCjw9QFLhBx2Ls7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 535,
								"contract": "contracts/Beef.sol:Beef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contracts/Beef.sol:Beef",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "contracts/Beef.sol:Beef",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 27,
								"contract": "contracts/Beef.sol:Beef",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/Beef.sol:Beef",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "contracts/Beef.sol:Beef",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 535,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Beef.sol": {
				"ast": {
					"absolutePath": "contracts/Beef.sol",
					"exportedSymbols": {
						"Beef": [
							526
						],
						"IERC20": [
							889
						],
						"IERC20Errors": [
							716
						],
						"IERC20Metadata": [
							915
						],
						"Ownable": [
							674
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 890,
							"src": "58:123:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 889,
										"src": "66:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 916,
							"src": "182:150:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 915,
										"src": "190:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 812,
							"src": "333:136:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 716,
										"src": "341:12:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 675,
							"src": "470:120:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 674,
										"src": "478:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "IERC20",
										"nameLocations": [
											"609:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "609:6:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "609:6:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IERC20Errors",
										"nameLocations": [
											"617:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 716,
										"src": "617:12:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "617:12:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "Ownable",
										"nameLocations": [
											"631:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 674,
										"src": "631:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "631:7:0"
								}
							],
							"canonicalName": "Beef",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 526,
							"linearizedBaseContracts": [
								526,
								674,
								945,
								716,
								889
							],
							"name": "Beef",
							"nameLocation": "601:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "689:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "645:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 18,
										"keyName": "account",
										"keyNameLocation": "661:7:0",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "653:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "645:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "672:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "777:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "705:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyName": "account",
										"keyNameLocation": "721:7:0",
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "713:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "705:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"keyName": "spender",
											"keyNameLocation": "748:7:0",
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "740:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "732:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "759:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "811:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "795:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "795:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "845:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "830:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "830:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "871:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "856:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 30,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "856:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "971:57:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "981:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "989:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "981:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "981:13:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1004:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "1004:17:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 40,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "964:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 41,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 39,
												"name": "Ownable",
												"nameLocations": [
													"956:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 674,
												"src": "956:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "956:14:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "911:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "897:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "918:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 34,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "918:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:59:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:0"
									},
									"scope": 526,
									"src": "885:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1094:29:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1111:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "1104:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1043:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1079:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 54,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1079:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:15:0"
									},
									"scope": 526,
									"src": "1034:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1191:31:0",
										"statements": [
											{
												"expression": {
													"id": 65,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "1208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 64,
												"id": 66,
												"nodeType": "Return",
												"src": "1201:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1138:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1176:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:15:0"
									},
									"scope": 526,
									"src": "1129:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "1284:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1301:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 72,
												"id": 74,
												"nodeType": "Return",
												"src": "1294:9:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1237:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1245:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1277:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 70,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1277:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:7:0"
									},
									"scope": 526,
									"src": "1228:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										838
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1377:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1394:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "1387:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1325:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1368:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:9:0"
									},
									"scope": 526,
									"src": "1316:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										846
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1493:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1510:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1510:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1503:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1428:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1484:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:9:0"
									},
									"scope": 526,
									"src": "1419:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										856
									],
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1616:103:0",
										"statements": [
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1634:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1626:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 105,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1626:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 107,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "1642:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1626:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 111,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1674:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1681:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 113,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 110,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "1664:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1664:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1664:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1708:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 104,
												"id": 117,
												"nodeType": "Return",
												"src": "1701:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1550:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1567:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1559:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1579:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1571:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:27:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1610:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1610:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:6:0"
									},
									"scope": 526,
									"src": "1541:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1814:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 128,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1831:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 130,
														"indexExpression": {
															"id": 129,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "1843:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1831:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 132,
													"indexExpression": {
														"id": 131,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1831:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 127,
												"id": 133,
												"nodeType": "Return",
												"src": "1824:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1734:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:32:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1805:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:9:0"
									},
									"scope": 526,
									"src": "1725:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1950:107:0",
										"statements": [
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1968:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1960:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 144,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1960:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 146,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "1976:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1976:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1960:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 150,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 151,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "2014:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2023:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 149,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															451
														],
														"referencedDeclaration": 392,
														"src": "1998:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1998:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 143,
												"id": 156,
												"nodeType": "Return",
												"src": "2039:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1880:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1905:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:32:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1944:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:6:0"
									},
									"scope": 526,
									"src": "1871:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										888
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2156:151:0",
										"statements": [
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "2174:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "2166:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 169,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2166:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 171,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2184:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2184:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2166:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "2237:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 174,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2206:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2206:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "2269:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "2273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 180,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2253:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2253:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2253:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2296:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 168,
												"id": 187,
												"nodeType": "Return",
												"src": "2289:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2072:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2093:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2085:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2107:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2099:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2119:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2111:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:41:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2150:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2150:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2149:6:0"
									},
									"scope": 526,
									"src": "2063:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "2382:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 198,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2396:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2412:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 199,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2404:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2404:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2396:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "IfStatement",
												"src": "2392:86:0",
												"trueBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "2416:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2464:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2456:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 205,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2456:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2456:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 204,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "2437:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2437:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 210,
															"nodeType": "RevertStatement",
															"src": "2430:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 213,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2491:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2505:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2497:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2497:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2491:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 227,
												"nodeType": "IfStatement",
												"src": "2487:86:0",
												"trueBody": {
													"id": 226,
													"nodeType": "Block",
													"src": "2509:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2559:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2551:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 220,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2551:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2551:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 219,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "2530:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2530:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 225,
															"nodeType": "RevertStatement",
															"src": "2523:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2590:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2596:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2600:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 228,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2582:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2582:24:0"
											}
										]
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2322:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2340:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2332:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2354:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2346:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2366:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "2358:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:41:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:0:0"
									},
									"scope": 526,
									"src": "2313:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2694:631:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 244,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2708:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2724:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2716:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 245,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2716:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2716:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2708:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2780:283:0",
													"statements": [
														{
															"assignments": [
																256
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 256,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "2802:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 281,
																	"src": "2794:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 255,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2794:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 260,
															"initialValue": {
																"baseExpression": {
																	"id": 257,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2816:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 259,
																"indexExpression": {
																	"id": 258,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "2826:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2816:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2794:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 261,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2849:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 262,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "2863:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2849:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 271,
															"nodeType": "IfStatement",
															"src": "2845:115:0",
															"trueBody": {
																"id": 270,
																"nodeType": "Block",
																"src": "2870:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 265,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 237,
																					"src": "2920:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 266,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 256,
																					"src": "2926:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 267,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 241,
																					"src": "2939:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 264,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "2895:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2895:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 269,
																		"nodeType": "RevertStatement",
																		"src": "2888:57:0"
																	}
																]
															}
														},
														{
															"id": 280,
															"nodeType": "UncheckedBlock",
															"src": "2973:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 272,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 19,
																				"src": "3001:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 274,
																			"indexExpression": {
																				"id": 273,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 237,
																				"src": "3011:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3001:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 275,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 256,
																				"src": "3019:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 276,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "3033:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3019:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3001:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 279,
																	"nodeType": "ExpressionStatement",
																	"src": "3001:37:0"
																}
															]
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2704:359:0",
												"trueBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "2728:46:0",
													"statements": [
														{
															"expression": {
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 250,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2742:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 251,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "2758:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2742:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 253,
															"nodeType": "ExpressionStatement",
															"src": "2742:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 283,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3077:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 284,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3083:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3083:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3077:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 302,
													"nodeType": "Block",
													"src": "3189:89:0",
													"statements": [
														{
															"id": 301,
															"nodeType": "UncheckedBlock",
															"src": "3203:65:0",
															"statements": [
																{
																	"expression": {
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 19,
																				"src": "3231:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 239,
																				"src": "3241:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3231:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "3248:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3231:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 300,
																	"nodeType": "ExpressionStatement",
																	"src": "3231:22:0"
																}
															]
														}
													]
												},
												"id": 303,
												"nodeType": "IfStatement",
												"src": "3073:205:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "3095:88:0",
													"statements": [
														{
															"id": 293,
															"nodeType": "UncheckedBlock",
															"src": "3109:64:0",
															"statements": [
																{
																	"expression": {
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 289,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "3137:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "3153:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3137:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 292,
																	"nodeType": "ExpressionStatement",
																	"src": "3137:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 305,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3302:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3308:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 307,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "3293:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3293:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "EmitStatement",
												"src": "3288:30:0"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2628:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2644:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2636:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2658:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2650:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2670:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2662:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2635:41:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:0:0"
									},
									"scope": 526,
									"src": "2619:706:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3387:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3420:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 319,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3412:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3412:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3401:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "IfStatement",
												"src": "3397:91:0",
												"trueBody": {
													"id": 331,
													"nodeType": "Block",
													"src": "3424:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3474:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3466:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 325,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3466:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3466:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 324,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "3445:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3445:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 330,
															"nodeType": "RevertStatement",
															"src": "3438:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3513:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 334,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3505:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3505:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3526:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "3497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3497:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "3497:35:0"
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "3340:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3354:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3346:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3371:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3363:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3345:32:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:0"
									},
									"scope": 526,
									"src": "3331:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "3601:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 351,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3626:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3626:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3615:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 364,
												"nodeType": "IfStatement",
												"src": "3611:89:0",
												"trueBody": {
													"id": 363,
													"nodeType": "Block",
													"src": "3638:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3686:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3678:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 357,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3678:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3678:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 356,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "3659:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3659:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 362,
															"nodeType": "RevertStatement",
															"src": "3652:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3726:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3726:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3726:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "3709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3709:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "3709:35:0"
											}
										]
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "3554:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3585:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3577:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:32:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3601:0:0"
									},
									"scope": 526,
									"src": "3545:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "3831:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3866:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3873:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 384,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															451
														],
														"referencedDeclaration": 451,
														"src": "3841:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "3841:37:0"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "3766:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3798:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3790:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3815:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3774:47:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3831:0:0"
									},
									"scope": 526,
									"src": "3757:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "3989:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "4003:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4020:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 404,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4012:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4012:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4003:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 417,
												"nodeType": "IfStatement",
												"src": "3999:89:0",
												"trueBody": {
													"id": 416,
													"nodeType": "Block",
													"src": "4024:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4074:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4066:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 410,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4066:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4066:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 409,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "4045:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4045:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 415,
															"nodeType": "RevertStatement",
															"src": "4038:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "4101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 419,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4112:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4112:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4101:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "4097:90:0",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "4124:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4173:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4165:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 425,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4165:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4165:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 424,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "4145:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4145:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 430,
															"nodeType": "RevertStatement",
															"src": "4138:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 433,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "4196:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 436,
															"indexExpression": {
																"id": 434,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "4208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4196:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 437,
														"indexExpression": {
															"id": 435,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "4215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4196:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "4226:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4196:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "4196:35:0"
											},
											{
												"condition": {
													"id": 441,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "4245:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "IfStatement",
												"src": "4241:76:0",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "4256:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 443,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "4284:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 444,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "4291:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 445,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4300:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 442,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "4275:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "EmitStatement",
															"src": "4270:36:0"
														}
													]
												}
											}
										]
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "3900:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "3961:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "3956:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:63:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3989:0:0"
									},
									"scope": 526,
									"src": "3891:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "4418:388:0",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4436:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "4428:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 460,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"id": 463,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4465:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 462,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "4455:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4455:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4428:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4494:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4519:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4519:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 468,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4514:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4514:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4528:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4514:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4494:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "4490:310:0",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "4533:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 474,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "4551:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 475,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "4570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4551:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 484,
															"nodeType": "IfStatement",
															"src": "4547:130:0",
															"trueBody": {
																"id": 483,
																"nodeType": "Block",
																"src": "4577:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 478,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 455,
																					"src": "4629:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 479,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 461,
																					"src": "4638:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 480,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 457,
																					"src": "4656:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 477,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "4602:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4602:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 482,
																		"nodeType": "RevertStatement",
																		"src": "4595:67:0"
																	}
																]
															}
														},
														{
															"id": 494,
															"nodeType": "UncheckedBlock",
															"src": "4690:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 486,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "4727:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 487,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "4734:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 488,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 461,
																					"src": "4743:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 489,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 457,
																					"src": "4762:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4743:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4769:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 485,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				392,
																				451
																			],
																			"referencedDeclaration": 451,
																			"src": "4718:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4718:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 493,
																	"nodeType": "ExpressionStatement",
																	"src": "4718:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "4338:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4362:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4394:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4386:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4353:47:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4418:0:0"
									},
									"scope": 526,
									"src": "4329:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4873:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4889:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4893:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "4883:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4883:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyOwner",
												"nameLocations": [
													"4863:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "4863:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4863:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "4821:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4834:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4826:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4846:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4838:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:28:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:0"
									},
									"scope": 526,
									"src": "4812:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "4952:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4968:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4972:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4968:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "4980:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "4962:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4962:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "4962:25:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4922:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4935:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4927:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4926:16:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4952:0:0"
									},
									"scope": 526,
									"src": "4913:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 527,
							"src": "592:4404:0",
							"usedErrors": [
								540,
								545,
								686,
								691,
								696,
								705,
								710,
								715
							],
							"usedEvents": [
								551,
								823,
								832
							]
						}
					],
					"src": "32:4965:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							945
						],
						"Ownable": [
							674
						]
					},
					"id": 675,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 675,
							"sourceUnit": 946,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 529,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 945,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 532,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 945,
										"src": "692:7:1"
									},
									"id": 533,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 531,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 674,
							"linearizedBaseContracts": [
								674,
								945
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 535,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 674,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 534,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 540,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 545,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 551,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 573,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 572,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 674,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 580,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 583,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 585,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 591,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 535,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 674,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 598,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 600,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 604,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 607,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 674,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 618,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 617,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 614,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 674,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 633,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 634,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 646,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 640,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 639,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 645,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 648,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 630,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 674,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 659,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"id": 661,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 535,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 668,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 667,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 674,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 675,
							"src": "663:2438:1",
							"usedErrors": [
								540,
								545
							],
							"usedEvents": [
								551
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							811
						],
						"IERC20Errors": [
							716
						],
						"IERC721Errors": [
							764
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 676,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 686,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 691,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 696,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 705,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 710,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 715,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 812,
							"src": "280:1764:2",
							"usedErrors": [
								686,
								691,
								696,
								705,
								710,
								715
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 717,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 764,
							"linearizedBaseContracts": [
								764
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 722,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 727,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 736,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 741,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 746,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 753,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 758,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 763,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 812,
							"src": "2190:2092:2",
							"usedErrors": [
								722,
								727,
								736,
								741,
								746,
								753,
								758,
								763
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 765,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 776,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 781,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 786,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 793,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 798,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 803,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 810,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 812,
							"src": "4430:2107:2",
							"usedErrors": [
								776,
								781,
								786,
								793,
								798,
								803,
								810
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							889
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 889,
							"linearizedBaseContracts": [
								889
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 823,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 832,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 889,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 889,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 889,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 889,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 889,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 889,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 890,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								823,
								832
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							889
						],
						"IERC20Metadata": [
							915
						]
					},
					"id": 916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 916,
							"sourceUnit": 890,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 892,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 889,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 895,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 889,
										"src": "306:6:4"
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 894,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 915,
							"linearizedBaseContracts": [
								915,
								889
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 915,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 905,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 915,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 911,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 915,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 916,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								823,
								832
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							945
						]
					},
					"id": 946,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 945,
							"linearizedBaseContracts": [
								945
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 923,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 922,
												"id": 925,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 945,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 932,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 931,
												"id": 934,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 945,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 940,
												"id": 942,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 945,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 946,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}